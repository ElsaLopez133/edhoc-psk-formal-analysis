Linear part:
exp(exp(g,a),b) = exp(exp(g,b),a)
Completing equations...
Completed equations:
exp(exp(g,a),b) = exp(exp(g,b),a)
Convergent part:
get_subject(make_cred(subject,psk)) = subject
fst((x_1,x_2)) = x_1
snd((x_1,x_2)) = x_2
Completing equations...
Completed equations:
snd((x_1,x_2)) = x_2
fst((x_1,x_2)) = x_1
get_subject(make_cred(subject,psk)) = subject
Process 0 (that is, the initial process):
{1}new psk_4: bitstring;
{2}event eHonest(psk_4);
{3}event eSharePSK(psk_4);
{4}!
{5}new cid_2: bitstring;
{6}new subject_i_4: bitstring;
{7}new subject_r_4: bitstring;
{8}let cred_i_2: bitstring = make_cred(subject_i_4,psk_4) in
{9}let cred_r_2: bitstring = make_cred(subject_r_4,psk_4) in
{10}let ID_CRED_PSK_2: bitstring = make_id(cred_i_2,cred_r_2,psk_4) in
{11}event eExposeSubjectI(subject_i_4);
{12}event eExposeSubjectR(subject_r_4);
{13}!
(
    {14}let cid: bitstring = cid_2 in
    {15}let method_2: bitstring = method_four in
    {16}in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    {17}event eMethodOk(method_2);
    {18}new X_2: bitstring;
    {19}event eDebug(X_2,X_2);
    {20}new EAD_3_2: bitstring;
    {21}event eShare(X_2);
    {22}event eLeakEAD(EAD_3_2);
    (
        {23}let s_2: bitstring = X_2 in
        {24}event eDebug(s_2,s_2);
        {25}event eLeakShare(snull)
    ) | (
        {26}let CRED_I_2: bitstring = get_cred_i(ID_CRED_PSK_2) in
        {27}let CRED_R_2: bitstring = get_cred_r(ID_CRED_PSK_2) in
        {28}let psk_2: bitstring = get_psk(ID_CRED_PSK_2) in
        {29}let subject_i_2: bitstring = get_subject(CRED_I_2) in
        {30}let subject_r_2: bitstring = get_subject(CRED_R_2) in
        {31}event eStart_I(cid,method_2,subject_i_2);
        {32}let G_X_2: bitstring = exp(g,X_2) in
        {33}event eDebug(G_X_2,G_X_2);
        {34}let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        {35}out(att, m1_2);
        {36}in(att, m2_2: bitstring);
        {37}let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        {38}let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        {39}let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        {40}let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        {41}let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        {42}event eDebug(PRK_2e_2,PRK_2e_2);
        {43}let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        {44}event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        {45}let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        {46}let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        {47}let =method_2 = method_four in
        {48}let PRK_3e2m_2: bitstring = PRK_2e_2 in
        {49}event eDerivedIShared(G_YX_2);
        {50}let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        {51}let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        {52}let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        {53}event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        {54}let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        {55}event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        {56}let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        {57}let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        {58}let external_aad_3_2: bitstring = (ID_CRED_PSK_2,(TH_3_2,(CRED_I_2,CRED_R_2))) in
        {59}let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        {60}let plaintext_3b_2: bitstring = EAD_3_2 in
        {61}let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        {62}let plaintext_3a_2: bitstring = (ID_CRED_PSK_2,ciphertext_3b_2) in
        {63}event eDebug(plaintext_3a_2,plaintext_3a_2);
        {64}let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        {65}let TH_4_2: bitstring = hash((wrap(TH_3_2),(ID_CRED_PSK_2,(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        {66}let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
        {67}let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
        {68}let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        {69}event eDebug(PRK_out_2,PRK_out_2);
        {70}out(att, m3_2);
        {71}event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            {72}in(att, m4_2: bitstring);
            {73}let external_aad_4_2: bitstring = TH_4_2 in
            {74}let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            {75}let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            {76}let EAD_4_2: bitstring = plaintext_4_2 in
            {77}event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            {78}event eFinishI(cid,PRK_out_2)
        ) | (
            {79}event eLeakSessionKey(snull)
        )
    )
) | (
    {80}!
    (
        {81}let cid_1: bitstring = cid_2 in
        {82}in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring)));
        {83}in(att, m1: bitstring);
        {84}let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
        {85}event eMethodOk(method);
        {86}new Y_2: bitstring;
        {87}new EAD_4: bitstring;
        {88}event eShare(Y_2);
        {89}event eDebug(Y_2,Y_2);
        {90}event eLeakEAD(EAD_4);
        (
            {91}let s: bitstring = Y_2 in
            {92}event eDebug(s,s);
            {93}event eLeakShare(snull)
        ) | (
            {94}let CRED_I: bitstring = get_cred_i(ID_CRED_PSK_2) in
            {95}let CRED_R: bitstring = get_cred_r(ID_CRED_PSK_2) in
            {96}let psk: bitstring = get_psk(ID_CRED_PSK_2) in
            {97}let subject_i: bitstring = get_subject(CRED_I) in
            {98}let subject_r: bitstring = get_subject(CRED_R) in
            {99}event eStart_R(cid_1,method,subject_r);
            {100}let G_Y: bitstring = exp(g,Y_2) in
            {101}event eDebug(G_Y,G_Y);
            {102}let G_XY_2: bitstring = exp(G_X,Y_2) in
            {103}event eDebug(G_XY_2,G_XY_2);
            {104}let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
            {105}let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
            {106}let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
            {107}event eDebug(PRK_2e,PRK_2e);
            {108}let =method = method_four in
            {109}let plaintext_2: bitstring = (C_R,EAD_2) in
            {110}let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
            {111}event eTHRShared(TH_2);
            {112}event eDerivedRShared(G_XY_2);
            {113}event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
            {114}let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
            {115}out(att, m2);
            {116}in(att, m3: bitstring);
            {117}let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
            {118}let PRK_3e2m: bitstring = PRK_2e in
            {119}let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
            {120}let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
            {121}event eDebug(PRK_4e3m,PRK_4e3m);
            {122}let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
            {123}event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
            {124}let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
            {125}let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
            {126}let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
            {127}let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
            {128}event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
            {129}let =ID_CRED_PSK_in_2 = ID_CRED_PSK_2 in
            {130}let external_aad_3: bitstring = (ID_CRED_PSK_2,(TH_3,(CRED_I,CRED_R))) in
            {131}let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
            {132}let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
            {133}let TH_4: bitstring = hash((wrap(TH_3),(ID_CRED_PSK_2,(plaintext_3b,(CRED_I,CRED_R))))) in
            {134}let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
            {135}let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
            {136}let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
            {137}event eDebug(PRK_out,PRK_out);
            {138}let external_aad_4: bitstring = TH_4 in
            {139}let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
            {140}let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
            {141}out(att, m4);
            {142}event eTransmitEAD(m4,EAD_4,PRK_out);
            {143}event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
            {144}event eFinishR(cid_1,PRK_out);
            (
                0
            ) | (
                {145}event eLeakSessionKey(snull)
            )
        )
    ) | (
        {146}let psk_1: bitstring = psk_4 in
        {147}event eDebug(psk_1,psk_1);
        {148}event eCompromise(snull)
    )
)

--  Process 1 (that is, process 0, with let moved downwards):
{1}new psk_4: bitstring;
{2}event eHonest(psk_4);
{3}event eSharePSK(psk_4);
{4}!
{5}new cid_2: bitstring;
{6}new subject_i_4: bitstring;
{7}new subject_r_4: bitstring;
{11}event eExposeSubjectI(subject_i_4);
{12}event eExposeSubjectR(subject_r_4);
{13}!
{9}let cred_r_2: bitstring = make_cred(subject_r_4,psk_4) in
{8}let cred_i_2: bitstring = make_cred(subject_i_4,psk_4) in
{10}let ID_CRED_PSK_2: bitstring = make_id(cred_i_2,cred_r_2,psk_4) in
(
    {16}in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    {15}let method_2: bitstring = method_four in
    {17}event eMethodOk(method_2);
    {18}new X_2: bitstring;
    {19}event eDebug(X_2,X_2);
    {20}new EAD_3_2: bitstring;
    {21}event eShare(X_2);
    {22}event eLeakEAD(EAD_3_2);
    (
        {23}let s_2: bitstring = X_2 in
        {24}event eDebug(s_2,s_2);
        {25}event eLeakShare(snull)
    ) | (
        {26}let CRED_I_2: bitstring = get_cred_i(ID_CRED_PSK_2) in
        {27}let CRED_R_2: bitstring = get_cred_r(ID_CRED_PSK_2) in
        {28}let psk_2: bitstring = get_psk(ID_CRED_PSK_2) in
        {29}let subject_i_2: bitstring = get_subject(CRED_I_2) in
        {14}let cid: bitstring = cid_2 in
        {31}event eStart_I(cid,method_2,subject_i_2);
        {32}let G_X_2: bitstring = exp(g,X_2) in
        {33}event eDebug(G_X_2,G_X_2);
        {34}let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        {35}out(att, m1_2);
        {36}in(att, m2_2: bitstring);
        {37}let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        {40}let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        {38}let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        {39}let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        {41}let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        {42}event eDebug(PRK_2e_2,PRK_2e_2);
        {43}let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        {44}event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        {45}let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        {46}let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        {47}let =method_2 = method_four in
        {49}event eDerivedIShared(G_YX_2);
        {50}let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        {48}let PRK_3e2m_2: bitstring = PRK_2e_2 in
        {51}let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        {52}let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        {53}event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        {54}let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        {55}event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        {60}let plaintext_3b_2: bitstring = EAD_3_2 in
        {58}let external_aad_3_2: bitstring = (ID_CRED_PSK_2,(TH_3_2,(CRED_I_2,CRED_R_2))) in
        {59}let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        {57}let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        {56}let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        {61}let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        {62}let plaintext_3a_2: bitstring = (ID_CRED_PSK_2,ciphertext_3b_2) in
        {63}event eDebug(plaintext_3a_2,plaintext_3a_2);
        {65}let TH_4_2: bitstring = hash((wrap(TH_3_2),(ID_CRED_PSK_2,(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        {68}let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        {69}event eDebug(PRK_out_2,PRK_out_2);
        {64}let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        {70}out(att, m3_2);
        {71}event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            {72}in(att, m4_2: bitstring);
            {73}let external_aad_4_2: bitstring = TH_4_2 in
            {74}let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            {67}let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            {66}let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            {75}let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            {30}let subject_r_2: bitstring = get_subject(CRED_R_2) in
            {77}event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            {78}event eFinishI(cid,PRK_out_2)
        ) | (
            {79}event eLeakSessionKey(snull)
        )
    )
) | (
    {80}!
    (
        {82}in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring)));
        {83}in(att, m1: bitstring);
        {84}let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
        {85}event eMethodOk(method);
        {86}new Y_2: bitstring;
        {87}new EAD_4: bitstring;
        {88}event eShare(Y_2);
        {89}event eDebug(Y_2,Y_2);
        {90}event eLeakEAD(EAD_4);
        (
            {91}let s: bitstring = Y_2 in
            {92}event eDebug(s,s);
            {93}event eLeakShare(snull)
        ) | (
            {94}let CRED_I: bitstring = get_cred_i(ID_CRED_PSK_2) in
            {95}let CRED_R: bitstring = get_cred_r(ID_CRED_PSK_2) in
            {96}let psk: bitstring = get_psk(ID_CRED_PSK_2) in
            {98}let subject_r: bitstring = get_subject(CRED_R) in
            {81}let cid_1: bitstring = cid_2 in
            {99}event eStart_R(cid_1,method,subject_r);
            {100}let G_Y: bitstring = exp(g,Y_2) in
            {101}event eDebug(G_Y,G_Y);
            {102}let G_XY_2: bitstring = exp(G_X,Y_2) in
            {103}event eDebug(G_XY_2,G_XY_2);
            {104}let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
            {105}let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
            {106}let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
            {107}event eDebug(PRK_2e,PRK_2e);
            {108}let =method = method_four in
            {111}event eTHRShared(TH_2);
            {112}event eDerivedRShared(G_XY_2);
            {110}let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
            {113}event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
            {109}let plaintext_2: bitstring = (C_R,EAD_2) in
            {114}let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
            {115}out(att, m2);
            {116}in(att, m3: bitstring);
            {118}let PRK_3e2m: bitstring = PRK_2e in
            {117}let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
            {119}let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
            {120}let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
            {121}event eDebug(PRK_4e3m,PRK_4e3m);
            {122}let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
            {123}event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
            {126}let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
            {127}let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
            {128}event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
            {129}let =ID_CRED_PSK_in_2 = ID_CRED_PSK_2 in
            {130}let external_aad_3: bitstring = (ID_CRED_PSK_2,(TH_3,(CRED_I,CRED_R))) in
            {131}let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
            {125}let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
            {124}let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
            {132}let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
            {133}let TH_4: bitstring = hash((wrap(TH_3),(ID_CRED_PSK_2,(plaintext_3b,(CRED_I,CRED_R))))) in
            {136}let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
            {137}event eDebug(PRK_out,PRK_out);
            {138}let external_aad_4: bitstring = TH_4 in
            {139}let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
            {135}let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
            {134}let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
            {140}let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
            {141}out(att, m4);
            {142}event eTransmitEAD(m4,EAD_4,PRK_out);
            {97}let subject_i: bitstring = get_subject(CRED_I) in
            {143}event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
            {144}event eFinishR(cid_1,PRK_out);
            (
                0
            ) | (
                {145}event eLeakSessionKey(snull)
            )
        )
    ) | (
        {146}let psk_1: bitstring = psk_4 in
        {147}event eDebug(psk_1,psk_1);
        {148}event eCompromise(snull)
    )
)

-- Axiom event(eShare(k)) && attacker(k) ==> event(eLeakShare(k)) in process 1.
-- Query event(eAcceptR(cid_3,m,subj_i,subj_r,prk,gx,y))@i && event(eHonest(psk_3))@k ==> (event(eAcceptI(cid2,m,subj_i,subj_r,prk2,x2,gy2))@t && i > t && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(y))@t encoded as event(eAcceptR(cid_3,m,subj_i,subj_r,prk,gx,y))@i && event(eHonest(psk_3)) ==> (event(eAcceptI(cid2,m,subj_i,subj_r,prk2,x2,gy2))@i_1 && i > i_1 && prk = prk2) || (event(eCompromise(psk_3))@i_2 && i > i_2) || event(eLeakShare(y)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 159 rules (70 with conclusion selected). Queue: 14 rules.
400 rules inserted. Base: 254 rules (73 with conclusion selected). Queue: 10 rules.
Starting query event(eAcceptR(cid_3,m,subj_i,subj_r,prk,gx,y))@i && event(eHonest(psk_3))@k ==> (event(eAcceptI(cid2,m,subj_i,subj_r,prk2,x2,gy2))@t && i > t && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(y))@t
goal reachable: b-event(eShare(Y)) && b-event(eShare(X)) && attacker(suitesI_1) && attacker(C_I_1) && attacker(EAD_1_1) && attacker(C_R_1) && attacker(EAD_2_1) && attacker(suitesR) -> event(eAcceptR(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),exp(g,X),Y)) && event(eHonest(psk_4[]))
The 1st, 2nd, 3rd, 4th, 5th, 6th, 7th, 8th hypotheses occur strictly before the 1st conclusion.
Abbreviations:
cid_3 = cid_2[!1 = @sid]
subject_i_1 = subject_i_4[!1 = @sid]
subject_r_1 = subject_r_4[!1 = @sid]
X = X_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]
Y = Y_2[m1 = (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))),suitesR_2 = suitesR,EAD_2 = EAD_2_1,C_R = C_R_1,!3 = @sid_2,!2 = @sid_3,!1 = @sid]
EAD = EAD_3_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]

Derivation:
Abbreviations:
cid_3 = cid_2[!1 = @sid]
subject_i_1 = subject_i_4[!1 = @sid]
subject_r_1 = subject_r_4[!1 = @sid]
X = X_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]
Y = Y_2[m1 = (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))),suitesR_2 = suitesR,EAD_2 = EAD_2_1,C_R = C_R_1,!3 = @sid_2,!2 = @sid_3,!1 = @sid]
EAD = EAD_3_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]

1. Event eHonest(psk_4[]) may be executed at {2}.
event(eHonest(psk_4[])).

2. We assume as hypothesis that
attacker(suitesR).

3. We assume as hypothesis that
attacker(EAD_2_1).

4. By 3, the attacker may know EAD_2_1.
By 2, the attacker may know suitesR.
Using the function 2-tuple the attacker may obtain (EAD_2_1,suitesR).
attacker((EAD_2_1,suitesR)).

5. We assume as hypothesis that
attacker(C_R_1).

6. By 5, the attacker may know C_R_1.
By 4, the attacker may know (EAD_2_1,suitesR).
Using the function 2-tuple the attacker may obtain (C_R_1,(EAD_2_1,suitesR)).
attacker((C_R_1,(EAD_2_1,suitesR))).

7. We assume as hypothesis that
attacker(EAD_1_1).

8. We assume as hypothesis that
attacker(C_I_1).

9. By 8, the attacker may know C_I_1.
By 7, the attacker may know EAD_1_1.
Using the function 2-tuple the attacker may obtain (C_I_1,EAD_1_1).
attacker((C_I_1,EAD_1_1)).

10. We assume as hypothesis that
attacker(suitesI_1).

11. By 10, the attacker may know suitesI_1.
By 9, the attacker may know (C_I_1,EAD_1_1).
Using the function 2-tuple the attacker may obtain (suitesI_1,(C_I_1,EAD_1_1)).
attacker((suitesI_1,(C_I_1,EAD_1_1))).

12. The message (suitesI_1,(C_I_1,EAD_1_1)) that the attacker may have by 11 may be received at input {16}.
The event eShare(X) may be executed at {21}.
So the message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) may be sent to the attacker at output {35}.
attacker((method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))))).

13. By 12, the attacker may know (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).
Using the function 2-proj-2-tuple the attacker may obtain (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
attacker((suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).

14. By 13, the attacker may know (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
Using the function 2-proj-2-tuple the attacker may obtain (exp(g,X),(C_I_1,EAD_1_1)).
attacker((exp(g,X),(C_I_1,EAD_1_1))).

15. By 14, the attacker may know (exp(g,X),(C_I_1,EAD_1_1)).
Using the function 1-proj-2-tuple the attacker may obtain exp(g,X).
attacker(exp(g,X)).

16. By 15, the attacker may know exp(g,X).
By 9, the attacker may know (C_I_1,EAD_1_1).
Using the function 2-tuple the attacker may obtain (exp(g,X),(C_I_1,EAD_1_1)).
attacker((exp(g,X),(C_I_1,EAD_1_1))).

17. By 10, the attacker may know suitesI_1.
By 16, the attacker may know (exp(g,X),(C_I_1,EAD_1_1)).
Using the function 2-tuple the attacker may obtain (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
attacker((suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).

18. Using the function method_four the attacker may obtain method_four.
attacker(method_four).

19. By 18, the attacker may know method_four.
By 17, the attacker may know (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
Using the function 2-tuple the attacker may obtain (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).
attacker((method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))))).

20. The message (C_R_1,(EAD_2_1,suitesR)) that the attacker may have by 6 may be received at input {82}.
The message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) that the attacker may have by 19 may be received at input {83}.
The event eShare(Y) may be executed at {88}.
So the message (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))) may be sent to the attacker at output {115}.
attacker((exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)))).

21. By 20, the attacker may know (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).
Using the function 2-proj-2-tuple the attacker may obtain encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)).
attacker(encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).

22. The message (C_R_1,(EAD_2_1,suitesR)) that the attacker may have by 6 may be received at input {82}.
The message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) that the attacker may have by 19 may be received at input {83}.
The event eShare(Y) may be executed at {88}.
So the message (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,X),Y)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))) may be sent to the attacker at output {115}.
attacker((exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,X),Y)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)))).

23. By 22, the attacker may know (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,X),Y)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).
Using the function 1-proj-2-tuple the attacker may obtain exp(g,Y).
attacker(exp(g,Y)).

24. By 23, the attacker may know exp(g,Y).
By 21, the attacker may know encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)).
Using the function 2-tuple the attacker may obtain (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).
attacker((exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)))).

25. The message (suitesI_1,(C_I_1,EAD_1_1)) that the attacker may have by 11 may be received at input {16}.
The event eShare(X) may be executed at {21}.
The message (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))) that the attacker may have by 24 may be received at input {36}.
So the message encxor((make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),aeadenc(EAD,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),stwelve[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sthirteen[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),iv_length),(sEncrypt0[],(sempty[],(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),seleven[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),plaintext_length)) may be sent to the attacker at output {70}.
attacker(encxor((make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),aeadenc(EAD,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),stwelve[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sthirteen[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),iv_length),(sEncrypt0[],(sempty[],(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),seleven[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),plaintext_length))).

26. The message (C_R_1,(EAD_2_1,suitesR)) that the attacker may have by 6 may be received at input {82}.
The message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) that the attacker may have by 19 may be received at input {83}.
The event eShare(Y) may be executed at {88}.
The message encxor((make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),aeadenc(EAD,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),stwelve[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sthirteen[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),iv_length),(sEncrypt0[],(sempty[],(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),seleven[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),plaintext_length)) that the attacker may have by 25 may be received at input {116}.
So event eAcceptR(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),exp(g,X),Y) may be executed at {143}.
event(eAcceptR(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),exp(g,X),Y)).

27. By 26, event(eAcceptR(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),exp(g,X),Y)).
By 1, event(eHonest(psk_4[])).
The goals are reached, combined in the following fact:
event(eAcceptR(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),exp(g,X),Y)) && event(eHonest(psk_4[])).


Initial state

Additional knowledge of the attacker:
att
sEncrypt0
seight
seleven
sempty
sfive
snine
snull
sseven
sthirteen
stwelve
stzero
a
a_1
a_2
a_3
a_4
a_5
method_four
--------------------------------------------------------------
New processes:
    new psk_4: bitstring;
    event eHonest(psk_4);
    event eSharePSK(psk_4);
    !
    new cid_2: bitstring;
    new subject_i_4: bitstring;
    new subject_r_4: bitstring;
    event eExposeSubjectI(subject_i_4);
    event eExposeSubjectR(subject_r_4);
    !
    let cred_r_2: bitstring = make_cred(subject_r_4,psk_4) in
    let cred_i_2: bitstring = make_cred(subject_i_4,psk_4) in
    let ID_CRED_PSK_2: bitstring = make_id(cred_i_2,cred_r_2,psk_4) in
    (
        in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
        let method_2: bitstring = method_four in
        event eMethodOk(method_2);
        new X_2: bitstring;
        event eDebug(X_2,X_2);
        new EAD_3_2: bitstring;
        event eShare(X_2);
        event eLeakEAD(EAD_3_2);
        (
            let s_2: bitstring = X_2 in
            event eDebug(s_2,s_2);
            event eLeakShare(snull)
        ) | (
            let CRED_I_2: bitstring = get_cred_i(ID_CRED_PSK_2) in
            let CRED_R_2: bitstring = get_cred_r(ID_CRED_PSK_2) in
            let psk_2: bitstring = get_psk(ID_CRED_PSK_2) in
            let subject_i_2: bitstring = get_subject(CRED_I_2) in
            let cid: bitstring = cid_2 in
            event eStart_I(cid,method_2,subject_i_2);
            let G_X_2: bitstring = exp(g,X_2) in
            event eDebug(G_X_2,G_X_2);
            let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
            out(att, m1_2);
            in(att, m2_2: bitstring);
            let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
            let G_YX_2: bitstring = exp(G_Y_2,X_2) in
            let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
            let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
            let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
            event eDebug(PRK_2e_2,PRK_2e_2);
            let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
            event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
            let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
            let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
            let =method_2 = method_four in
            event eDerivedIShared(G_YX_2);
            let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
            let PRK_3e2m_2: bitstring = PRK_2e_2 in
            let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
            let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
            event eDebug(PRK_4e3m_2,PRK_4e3m_2);
            let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
            event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
            let plaintext_3b_2: bitstring = EAD_3_2 in
            let external_aad_3_2: bitstring = (ID_CRED_PSK_2,(TH_3_2,(CRED_I_2,CRED_R_2))) in
            let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
            let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
            let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
            let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
            let plaintext_3a_2: bitstring = (ID_CRED_PSK_2,ciphertext_3b_2) in
            event eDebug(plaintext_3a_2,plaintext_3a_2);
            let TH_4_2: bitstring = hash((wrap(TH_3_2),(ID_CRED_PSK_2,(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
            let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
            event eDebug(PRK_out_2,PRK_out_2);
            let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
            out(att, m3_2);
            event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
            (
                in(att, m4_2: bitstring);
                let external_aad_4_2: bitstring = TH_4_2 in
                let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
                let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
                let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
                let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
                let subject_r_2: bitstring = get_subject(CRED_R_2) in
                event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
                event eFinishI(cid,PRK_out_2)
            ) | (
                event eLeakSessionKey(snull)
            )
        )
    ) | (
        !
        (
            in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring)));
            in(att, m1: bitstring);
            let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
            event eMethodOk(method);
            new Y_2: bitstring;
            new EAD_4: bitstring;
            event eShare(Y_2);
            event eDebug(Y_2,Y_2);
            event eLeakEAD(EAD_4);
            (
                let s: bitstring = Y_2 in
                event eDebug(s,s);
                event eLeakShare(snull)
            ) | (
                let CRED_I: bitstring = get_cred_i(ID_CRED_PSK_2) in
                let CRED_R: bitstring = get_cred_r(ID_CRED_PSK_2) in
                let psk: bitstring = get_psk(ID_CRED_PSK_2) in
                let subject_r: bitstring = get_subject(CRED_R) in
                let cid_1: bitstring = cid_2 in
                event eStart_R(cid_1,method,subject_r);
                let G_Y: bitstring = exp(g,Y_2) in
                event eDebug(G_Y,G_Y);
                let G_XY_2: bitstring = exp(G_X,Y_2) in
                event eDebug(G_XY_2,G_XY_2);
                let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
                let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
                let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
                event eDebug(PRK_2e,PRK_2e);
                let =method = method_four in
                event eTHRShared(TH_2);
                event eDerivedRShared(G_XY_2);
                let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
                event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
                let plaintext_2: bitstring = (C_R,EAD_2) in
                let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
                out(att, m2);
                in(att, m3: bitstring);
                let PRK_3e2m: bitstring = PRK_2e in
                let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
                let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
                let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
                event eDebug(PRK_4e3m,PRK_4e3m);
                let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
                event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
                let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
                let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
                event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
                let =ID_CRED_PSK_in_2 = ID_CRED_PSK_2 in
                let external_aad_3: bitstring = (ID_CRED_PSK_2,(TH_3,(CRED_I,CRED_R))) in
                let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
                let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
                let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
                let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
                let TH_4: bitstring = hash((wrap(TH_3),(ID_CRED_PSK_2,(plaintext_3b,(CRED_I,CRED_R))))) in
                let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
                event eDebug(PRK_out,PRK_out);
                let external_aad_4: bitstring = TH_4 in
                let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
                let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
                let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
                let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
                out(att, m4);
                event eTransmitEAD(m4,EAD_4,PRK_out);
                let subject_i: bitstring = get_subject(CRED_I) in
                event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
                event eFinishR(cid_1,PRK_out);
                (
                    0
                ) | (
                    event eLeakSessionKey(snull)
                )
            )
        ) | (
            let psk_1: bitstring = psk_4 in
            event eDebug(psk_1,psk_1);
            event eCompromise(snull)
        )
    )

--------------------------------------------------------------
1st process: new psk_4: bitstring creating psk_3

1st process: event eHonest(psk_3) executed; it is a goal

1st process: event eSharePSK(psk_3) executed

1st process: Reduction ! 1 copy(ies)

1st process: new cid_2: bitstring creating cid_4

1st process: new subject_i_4: bitstring creating subject_i_3

1st process: new subject_r_4: bitstring creating subject_r_3

1st process: event eExposeSubjectI(subject_i_3) executed

1st process: event eExposeSubjectR(subject_r_3) executed

1st process: Reduction ! 2 copy(ies)

2nd process: let cred_r_2: bitstring = make_cred(subject_r_3,psk_3) succeeds

2nd process: let cred_i_2: bitstring = make_cred(subject_i_3,psk_3) succeeds

2nd process: let ID_CRED_PSK_2: bitstring = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) succeeds

2nd process: Reduction |

3rd process: Reduction ! 1 copy(ies)

3rd process: Reduction |

4th process: Beginning of process compromise

4th process: let psk_1: bitstring = psk_3 succeeds

4th process: event eDebug(psk_3,psk_3) executed

4th process: event eCompromise(snull): destructor fails

3rd process: Beginning of process R

2nd process: Beginning of process I

1st process: let cred_r_2: bitstring = make_cred(subject_r_3,psk_3) succeeds

1st process: let cred_i_2: bitstring = make_cred(subject_i_3,psk_3) succeeds

1st process: let ID_CRED_PSK_2: bitstring = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) succeeds

1st process: Reduction |

2nd process: Reduction ! 0 copy(ies)

1st process: Beginning of process I

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring)));
    in(att, m1: bitstring);
    let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
    event eMethodOk(method);
    new Y_2: bitstring;
    new EAD_4: bitstring;
    event eShare(Y_2);
    event eDebug(Y_2,Y_2);
    event eLeakEAD(EAD_4);
    (
        let s: bitstring = Y_2 in
        event eDebug(s,s);
        event eLeakShare(snull)
    ) | (
        let CRED_I: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_r: bitstring = get_subject(CRED_R) in
        let cid_1: bitstring = cid_4 in
        event eStart_R(cid_1,method,subject_r);
        let G_Y: bitstring = exp(g,Y_2) in
        event eDebug(G_Y,G_Y);
        let G_XY_2: bitstring = exp(G_X,Y_2) in
        event eDebug(G_XY_2,G_XY_2);
        let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
        let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
        let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
        event eDebug(PRK_2e,PRK_2e);
        let =method = method_four in
        event eTHRShared(TH_2);
        event eDerivedRShared(G_XY_2);
        let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
        let plaintext_2: bitstring = (C_R,EAD_2) in
        let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
        out(att, m2);
        in(att, m3: bitstring);
        let PRK_3e2m: bitstring = PRK_2e in
        let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
        let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
        let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
        event eDebug(PRK_4e3m,PRK_4e3m);
        let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
        event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
        let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
        let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
        event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
        let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
        let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(CRED_I,CRED_R))) in
        let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
        let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
        let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
        let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
        let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(CRED_I,CRED_R))))) in
        let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
        event eDebug(PRK_out,PRK_out);
        let external_aad_4: bitstring = TH_4 in
        let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
        let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
        let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
        let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
        out(att, m4);
        event eTransmitEAD(m4,EAD_4,PRK_out);
        let subject_i: bitstring = get_subject(CRED_I) in
        event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
        event eFinishR(cid_1,PRK_out);
        (
            0
        ) | (
            event eLeakSessionKey(snull)
        )
    )
)

--------------------------------------------------------------
1st process: in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring))) done with message (a_5,(a_4,a_3))

1st process: let method_2: bitstring = method_four succeeds

1st process: event eMethodOk(method_four) executed

1st process: new X_2: bitstring creating X_1

1st process: event eDebug(X_1,X_1) executed

1st process: new EAD_3_2: bitstring creating EAD_1

1st process: event eShare(X_1) executed

1st process: event eLeakEAD(EAD_1) executed

1st process: Reduction |

2nd process: let CRED_I_2: bitstring = make_cred(subject_i_3,psk_3) succeeds

2nd process: let CRED_R_2: bitstring = make_cred(subject_r_3,psk_3) succeeds

2nd process: let psk_2: bitstring = psk_3 succeeds

2nd process: let subject_i_2: bitstring = get_subject(make_cred(subject_i_3,psk_3)) succeeds

2nd process: let cid: bitstring = cid_4 succeeds

2nd process: event eStart_I(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3))) executed

2nd process: let G_X_2: bitstring = exp(g,X_1) succeeds

2nd process: event eDebug(exp(g,X_1),exp(g,X_1)) executed

2nd process: let m1_2: bitstring = (method_four,(a_5,(exp(g,X_1),(a_4,a_3)))) succeeds

2nd process: out(att, (~M,(~M_1,(~M_2,(~M_3,~M_4))))) with ~M = method_four, ~M_1 = a_5, ~M_2 = exp(g,X_1), ~M_3 = a_4, ~M_4 = a_3 done

Additional knowledge of the attacker:
~M_2 = exp(g,X_1)
--------------------------------------------------------------
1st process: Beginning of process CompromiseShare

1st process: let s_2: bitstring = X_1 succeeds

1st process: event eDebug(X_1,X_1) executed

1st process: event eLeakShare(snull): destructor fails

New processes:
(
    in(att, m2_2: bitstring);
    let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
    let G_YX_2: bitstring = exp(G_Y_2,X_1) in
    let TH_1_2: bitstring = hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))) in
    let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
    let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
    event eDebug(PRK_2e_2,PRK_2e_2);
    let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
    event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
    let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
    let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
    let =method_four = method_four in
    event eDerivedIShared(G_YX_2);
    let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
    let PRK_3e2m_2: bitstring = PRK_2e_2 in
    let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
    let PRK_4e3m_2: bitstring = hkdfextract(psk_3,SALT_4e3m_2) in
    event eDebug(PRK_4e3m_2,PRK_4e3m_2);
    let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
    event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
    let plaintext_3b_2: bitstring = EAD_1 in
    let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
    let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
    let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
    let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
    let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
    event eDebug(plaintext_3a_2,plaintext_3a_2);
    let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
    event eDebug(PRK_out_2,PRK_out_2);
    let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
    out(att, m3_2);
    event eTransmitEAD(m3_2,EAD_1,PRK_4e3m_2);
    (
        in(att, m4_2: bitstring);
        let external_aad_4_2: bitstring = TH_4_2 in
        let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
        let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
        let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
        let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
        let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
        event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,PRK_out_2,X_1,G_Y_2);
        event eFinishI(cid_4,PRK_out_2)
    ) | (
        event eLeakSessionKey(snull)
    )
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring)));
    in(att, m1: bitstring);
    let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
    event eMethodOk(method);
    new Y_2: bitstring;
    new EAD_4: bitstring;
    event eShare(Y_2);
    event eDebug(Y_2,Y_2);
    event eLeakEAD(EAD_4);
    (
        let s: bitstring = Y_2 in
        event eDebug(s,s);
        event eLeakShare(snull)
    ) | (
        let CRED_I: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_r: bitstring = get_subject(CRED_R) in
        let cid_1: bitstring = cid_4 in
        event eStart_R(cid_1,method,subject_r);
        let G_Y: bitstring = exp(g,Y_2) in
        event eDebug(G_Y,G_Y);
        let G_XY_2: bitstring = exp(G_X,Y_2) in
        event eDebug(G_XY_2,G_XY_2);
        let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
        let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
        let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
        event eDebug(PRK_2e,PRK_2e);
        let =method = method_four in
        event eTHRShared(TH_2);
        event eDerivedRShared(G_XY_2);
        let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
        let plaintext_2: bitstring = (C_R,EAD_2) in
        let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
        out(att, m2);
        in(att, m3: bitstring);
        let PRK_3e2m: bitstring = PRK_2e in
        let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
        let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
        let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
        event eDebug(PRK_4e3m,PRK_4e3m);
        let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
        event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
        let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
        let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
        event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
        let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
        let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(CRED_I,CRED_R))) in
        let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
        let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
        let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
        let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
        let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(CRED_I,CRED_R))))) in
        let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
        event eDebug(PRK_out,PRK_out);
        let external_aad_4: bitstring = TH_4 in
        let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
        let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
        let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
        let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
        out(att, m4);
        event eTransmitEAD(m4,EAD_4,PRK_out);
        let subject_i: bitstring = get_subject(CRED_I) in
        event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
        event eFinishR(cid_1,PRK_out);
        (
            0
        ) | (
            event eLeakSessionKey(snull)
        )
    )
)

--------------------------------------------------------------
3rd process: in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring))) done with message (a_2,(a_1,a))

New processes:
(
    in(att, m2_2: bitstring);
    let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
    let G_YX_2: bitstring = exp(G_Y_2,X_1) in
    let TH_1_2: bitstring = hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))) in
    let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
    let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
    event eDebug(PRK_2e_2,PRK_2e_2);
    let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
    event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
    let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
    let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
    let =method_four = method_four in
    event eDerivedIShared(G_YX_2);
    let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
    let PRK_3e2m_2: bitstring = PRK_2e_2 in
    let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
    let PRK_4e3m_2: bitstring = hkdfextract(psk_3,SALT_4e3m_2) in
    event eDebug(PRK_4e3m_2,PRK_4e3m_2);
    let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
    event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
    let plaintext_3b_2: bitstring = EAD_1 in
    let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
    let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
    let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
    let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
    let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
    event eDebug(plaintext_3a_2,plaintext_3a_2);
    let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
    event eDebug(PRK_out_2,PRK_out_2);
    let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
    out(att, m3_2);
    event eTransmitEAD(m3_2,EAD_1,PRK_4e3m_2);
    (
        in(att, m4_2: bitstring);
        let external_aad_4_2: bitstring = TH_4_2 in
        let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
        let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
        let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
        let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
        let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
        event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,PRK_out_2,X_1,G_Y_2);
        event eFinishI(cid_4,PRK_out_2)
    ) | (
        event eLeakSessionKey(snull)
    )
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m1: bitstring);
    let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
    event eMethodOk(method);
    new Y_2: bitstring;
    new EAD_4: bitstring;
    event eShare(Y_2);
    event eDebug(Y_2,Y_2);
    event eLeakEAD(EAD_4);
    (
        let s: bitstring = Y_2 in
        event eDebug(s,s);
        event eLeakShare(snull)
    ) | (
        let CRED_I: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_r: bitstring = get_subject(CRED_R) in
        let cid_1: bitstring = cid_4 in
        event eStart_R(cid_1,method,subject_r);
        let G_Y: bitstring = exp(g,Y_2) in
        event eDebug(G_Y,G_Y);
        let G_XY_2: bitstring = exp(G_X,Y_2) in
        event eDebug(G_XY_2,G_XY_2);
        let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
        let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
        let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
        event eDebug(PRK_2e,PRK_2e);
        let =method = method_four in
        event eTHRShared(TH_2);
        event eDerivedRShared(G_XY_2);
        let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
        let plaintext_2: bitstring = (a_2,a_1) in
        let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
        out(att, m2);
        in(att, m3: bitstring);
        let PRK_3e2m: bitstring = PRK_2e in
        let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
        let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
        let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
        event eDebug(PRK_4e3m,PRK_4e3m);
        let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
        event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
        let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
        let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
        event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
        let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
        let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(CRED_I,CRED_R))) in
        let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
        let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
        let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
        let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
        let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(CRED_I,CRED_R))))) in
        let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
        event eDebug(PRK_out,PRK_out);
        let external_aad_4: bitstring = TH_4 in
        let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
        let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
        let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
        let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
        out(att, m4);
        event eTransmitEAD(m4,EAD_4,PRK_out);
        let subject_i: bitstring = get_subject(CRED_I) in
        event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
        event eFinishR(cid_1,PRK_out);
        (
            0
        ) | (
            event eLeakSessionKey(snull)
        )
    )
)

--------------------------------------------------------------
3rd process: in(att, m1: bitstring) done with message (method_four,(a_5,(~M_2,(a_4,a_3)))) = (method_four,(a_5,(exp(g,X_1),(a_4,a_3))))

3rd process: let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = (method_four,(a_5,(exp(g,X_1),(a_4,a_3)))) succeeds

3rd process: event eMethodOk(method_four) executed

3rd process: new Y_2: bitstring creating Y_1

3rd process: new EAD_4: bitstring creating EAD_2

3rd process: event eShare(Y_1) executed

3rd process: event eDebug(Y_1,Y_1) executed

3rd process: event eLeakEAD(EAD_2) executed

3rd process: Reduction |

4th process: let CRED_I: bitstring = make_cred(subject_i_3,psk_3) succeeds

4th process: let CRED_R: bitstring = make_cred(subject_r_3,psk_3) succeeds

4th process: let psk: bitstring = psk_3 succeeds

4th process: let subject_r: bitstring = get_subject(make_cred(subject_r_3,psk_3)) succeeds

4th process: let cid_1: bitstring = cid_4 succeeds

4th process: event eStart_R(cid_4,method_four,get_subject(make_cred(subject_r_3,psk_3))) executed

4th process: let G_Y: bitstring = exp(g,Y_1) succeeds

4th process: event eDebug(exp(g,Y_1),exp(g,Y_1)) executed

4th process: let G_XY_2: bitstring = exp(exp(g,X_1),Y_1) succeeds

4th process: event eDebug(exp(exp(g,X_1),Y_1),exp(exp(g,X_1),Y_1)) executed

4th process: let TH_1: bitstring = hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))) succeeds

4th process: let TH_2: bitstring = hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))) succeeds

4th process: let PRK_2e: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)) succeeds

4th process: event eDebug(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1))) executed

4th process: let =method_four = method_four succeeds

4th process: event eTHRShared(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))) executed

4th process: event eDerivedRShared(exp(exp(g,X_1),Y_1)) executed

4th process: let KEYSTREAM_2A: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length) succeeds

4th process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length)) executed

4th process: let plaintext_2: bitstring = (a_2,a_1) succeeds

4th process: let m2: bitstring = (exp(g,Y_1),encxor((a_2,a_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length))) succeeds

4th process: out(att, (~M_5,~M_6)) with ~M_5 = exp(g,Y_1), ~M_6 = encxor((a_2,a_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length)) done

Additional knowledge of the attacker:
~M_6 = encxor((a_2,a_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length))
~M_5 = exp(g,Y_1)
--------------------------------------------------------------
3rd process: Beginning of process CompromiseShare

3rd process: let s: bitstring = Y_1 succeeds

3rd process: event eDebug(Y_1,Y_1) executed

3rd process: event eLeakShare(snull): destructor fails

New processes:
(
    in(att, m2_2: bitstring);
    let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
    let G_YX_2: bitstring = exp(G_Y_2,X_1) in
    let TH_1_2: bitstring = hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))) in
    let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
    let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
    event eDebug(PRK_2e_2,PRK_2e_2);
    let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
    event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
    let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
    let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
    let =method_four = method_four in
    event eDerivedIShared(G_YX_2);
    let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
    let PRK_3e2m_2: bitstring = PRK_2e_2 in
    let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
    let PRK_4e3m_2: bitstring = hkdfextract(psk_3,SALT_4e3m_2) in
    event eDebug(PRK_4e3m_2,PRK_4e3m_2);
    let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
    event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
    let plaintext_3b_2: bitstring = EAD_1 in
    let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
    let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
    let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
    let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
    let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
    event eDebug(plaintext_3a_2,plaintext_3a_2);
    let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
    event eDebug(PRK_out_2,PRK_out_2);
    let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
    out(att, m3_2);
    event eTransmitEAD(m3_2,EAD_1,PRK_4e3m_2);
    (
        in(att, m4_2: bitstring);
        let external_aad_4_2: bitstring = TH_4_2 in
        let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
        let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
        let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
        let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
        let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
        event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,PRK_out_2,X_1,G_Y_2);
        event eFinishI(cid_4,PRK_out_2)
    ) | (
        event eLeakSessionKey(snull)
    )
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m3: bitstring);
    let PRK_3e2m: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)) in
    let TH_3: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))) in
    let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
    let PRK_4e3m: bitstring = hkdfextract(psk_3,SALT_4e3m) in
    event eDebug(PRK_4e3m,PRK_4e3m);
    let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
    event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
    let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
    let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
    event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
    let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
    let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
    let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
    let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
    let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
    let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
    event eDebug(PRK_out,PRK_out);
    let external_aad_4: bitstring = TH_4 in
    let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
    let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
    let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
    let m4: bitstring = aeadenc(EAD_2,K_4,IV_4,ad_4) in
    out(att, m4);
    event eTransmitEAD(m4,EAD_2,PRK_out);
    let subject_i: bitstring = get_subject(make_cred(subject_i_3,psk_3)) in
    event eAcceptR(cid_4,method_four,subject_i,get_subject(make_cred(subject_r_3,psk_3)),PRK_out,exp(g,X_1),Y_1);
    event eFinishR(cid_4,PRK_out);
    (
        0
    ) | (
        event eLeakSessionKey(snull)
    )
)

--------------------------------------------------------------
1st process: in(att, m2_2: bitstring) done with message (~M_5,~M_6) = (exp(g,Y_1),encxor((a_2,a_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length)))

1st process: let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = (exp(g,Y_1),encxor((a_2,a_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length))) succeeds

1st process: let G_YX_2: bitstring = exp(exp(g,Y_1),X_1) succeeds

1st process: let TH_1_2: bitstring = hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))) succeeds

1st process: let TH_2_2: bitstring = hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))) succeeds

1st process: let PRK_2e_2: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)) succeeds

1st process: event eDebug(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1))) executed

1st process: let KEYSTREAM_2A_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length) succeeds

1st process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),plaintext_length)) executed

1st process: let plaintext_2_2: bitstring = (a_2,a_1) succeeds

1st process: let (C_R_2: bitstring,EAD_2_2: bitstring) = (a_2,a_1) succeeds

1st process: let =method_four = method_four succeeds

1st process: event eDerivedIShared(exp(exp(g,Y_1),X_1)) executed

1st process: let TH_3_2: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))) succeeds

1st process: let PRK_3e2m_2: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)) succeeds

1st process: let SALT_4e3m_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length) succeeds

1st process: let PRK_4e3m_2: bitstring = hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)) succeeds

1st process: event eDebug(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length))) executed

1st process: let KEYSTREAM_3A_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length) succeeds

1st process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length)) executed

1st process: let plaintext_3b_2: bitstring = EAD_1 succeeds

1st process: let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) succeeds

1st process: let ad_3_2: bitstring = (sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

1st process: let IV_3_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length) succeeds

1st process: let K_3_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length) succeeds

1st process: let ciphertext_3b_2: bitstring = aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))) succeeds

1st process: let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

1st process: event eDebug((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))) executed

1st process: let TH_4_2: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

1st process: let PRK_out_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length) succeeds

1st process: event eDebug(edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length)) executed

1st process: let m3_2: bitstring = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length)) succeeds

1st process: out(att, ~M_7) with ~M_7 = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length)) done

Additional knowledge of the attacker:
~M_7 = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length))
--------------------------------------------------------------
1st process: event eTransmitEAD(encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length)),EAD_1,hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length))) executed

1st process: Reduction |

2nd process: Beginning of process leakSKey(edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length))

2nd process: event eLeakSessionKey(snull) executed

2nd process: Reduction 0

New processes:
(
    in(att, m4_2: bitstring);
    let external_aad_4_2: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
    let IV_4_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length) in
    let K_4_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length) in
    let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
    let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
    event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),X_1,exp(g,Y_1));
    event eFinishI(cid_4,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length))
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m3: bitstring);
    let PRK_3e2m: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)) in
    let TH_3: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))) in
    let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
    let PRK_4e3m: bitstring = hkdfextract(psk_3,SALT_4e3m) in
    event eDebug(PRK_4e3m,PRK_4e3m);
    let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
    event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
    let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
    let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
    event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
    let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
    let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
    let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
    let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
    let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
    let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
    event eDebug(PRK_out,PRK_out);
    let external_aad_4: bitstring = TH_4 in
    let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
    let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
    let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
    let m4: bitstring = aeadenc(EAD_2,K_4,IV_4,ad_4) in
    out(att, m4);
    event eTransmitEAD(m4,EAD_2,PRK_out);
    let subject_i: bitstring = get_subject(make_cred(subject_i_3,psk_3)) in
    event eAcceptR(cid_4,method_four,subject_i,get_subject(make_cred(subject_r_3,psk_3)),PRK_out,exp(g,X_1),Y_1);
    event eFinishR(cid_4,PRK_out);
    (
        0
    ) | (
        event eLeakSessionKey(snull)
    )
)

--------------------------------------------------------------
3rd process: in(att, m3: bitstring) done with message ~M_7 = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length))

3rd process: let PRK_3e2m: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)) succeeds

3rd process: let TH_3: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))) succeeds

3rd process: let SALT_4e3m: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length) succeeds

3rd process: let PRK_4e3m: bitstring = hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)) succeeds

3rd process: event eDebug(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length))) executed

3rd process: let KEYSTREAM_3_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length) succeeds

3rd process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),plaintext_length)) executed

3rd process: let plaintext_3a: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

3rd process: let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

3rd process: event eDebug(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) executed

3rd process: let =make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) succeeds

3rd process: let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) succeeds

3rd process: let ad_3: bitstring = (sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

3rd process: let IV_3: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),iv_length) succeeds

3rd process: let K_3: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),key_length) succeeds

3rd process: let plaintext_3b: bitstring = EAD_1 succeeds

3rd process: let TH_4: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

3rd process: let PRK_out: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length) succeeds

3rd process: event eDebug(edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length)) executed

3rd process: let external_aad_4: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

3rd process: let ad_4: bitstring = (sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

3rd process: let IV_4: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length) succeeds

3rd process: let K_4: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length) succeeds

3rd process: let m4: bitstring = aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))) succeeds

3rd process: out(att, ~M_8) with ~M_8 = aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))) done

Additional knowledge of the attacker:
~M_8 = aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))))
--------------------------------------------------------------
3rd process: event eTransmitEAD(aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))),EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length)) executed

3rd process: let subject_i: bitstring = get_subject(make_cred(subject_i_3,psk_3)) succeeds

3rd process: event eAcceptR(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),get_subject(make_cred(subject_r_3,psk_3)),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),exp(g,X_1),Y_1) executed; it is a goal

New processes:
(
    in(att, m4_2: bitstring);
    let external_aad_4_2: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
    let IV_4_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length) in
    let K_4_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length) in
    let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
    let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
    event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),X_1,exp(g,Y_1));
    event eFinishI(cid_4,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length))
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    event eFinishR(cid_4,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length));
    (
        0
    ) | (
        event eLeakSessionKey(snull)
    )
)

--------------------------------------------------------------
The event eAcceptR(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),get_subject(make_cred(subject_r_3,psk_3)),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_5),(wrap(exp(g,X_1)),(wrap(a_4),a_3))))))))),(a_2,a_1)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_1,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),exp(g,X_1),Y_1) is executed at {143} in copy a_6, a_7, a_8.
The event eHonest(psk_3) is executed at {2}.
A trace has been found.

Warning: We could not verify that the following axiom, declared at File "edhoc_psk_proverif_debug_v2.pv", line 70, characters 20-79, is satisfied by the attack trace.
event(eShare(k)) && attacker(k) ==> event(eLeakShare(k))
RESULT event(eAcceptR(cid_3,m,subj_i,subj_r,prk,gx,y))@i && event(eHonest(psk_3))@k ==> (event(eAcceptI(cid2,m,subj_i,subj_r,prk2,x2,gy2))@t && i > t && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(y))@t is false.
-- Query event(eAcceptI(cid_3,m,subj_i,subj_r,prk,x,gy))@i && event(eHonest(psk_3))@k ==> (event(eAcceptR(cid2,m,subj_i,subj_r,prk2,gx2,y2))@j && i > j && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(x))@t encoded as event(eAcceptI(cid_3,m,subj_i,subj_r,prk,x,gy))@i && event(eHonest(psk_3)) ==> (event(eAcceptR(cid2,m,subj_i,subj_r,prk2,gx2,y2))@i_1 && i > i_1 && prk = prk2) || (event(eCompromise(psk_3))@i_2 && i > i_2) || event(eLeakShare(x)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 181 rules (62 with conclusion selected). Queue: 34 rules.
400 rules inserted. Base: 255 rules (73 with conclusion selected). Queue: 28 rules.
600 rules inserted. Base: 356 rules (73 with conclusion selected). Queue: 24 rules.
Starting query event(eAcceptI(cid_3,m,subj_i,subj_r,prk,x,gy))@i && event(eHonest(psk_3))@k ==> (event(eAcceptR(cid2,m,subj_i,subj_r,prk2,gx2,y2))@j && i > j && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(x))@t
goal reachable: b-event(eShare(Y)) && attacker(C_R_1) && attacker(EAD_2_1) && attacker(suitesR) && b-event(eShare(X)) && attacker(suitesI_1) && attacker(C_I_1) && attacker(EAD_1_1) -> event(eAcceptI(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),X,exp(g,Y))) && event(eHonest(psk_4[]))
The 1st, 2nd, 3rd, 4th, 5th, 6th, 7th, 8th hypotheses occur strictly before the 1st conclusion.
Abbreviations:
cid_3 = cid_2[!1 = @sid]
subject_i_1 = subject_i_4[!1 = @sid]
subject_r_1 = subject_r_4[!1 = @sid]
X = X_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]
Y = Y_2[m1 = (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))),suitesR_2 = suitesR,EAD_2 = EAD_2_1,C_R = C_R_1,!3 = @sid_2,!2 = @sid_3,!1 = @sid]
EAD = EAD_3_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]

Derivation:
Abbreviations:
cid_3 = cid_2[!1 = @sid]
subject_i_1 = subject_i_4[!1 = @sid]
subject_r_1 = subject_r_4[!1 = @sid]
X = X_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]
Y = Y_2[m1 = (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))),suitesR_2 = suitesR,EAD_2 = EAD_2_1,C_R = C_R_1,!3 = @sid_2,!2 = @sid_3,!1 = @sid]
EAD = EAD_3_2[EAD_1_2 = EAD_1_1,C_I_2 = C_I_1,suitesI_2 = suitesI_1,!2 = @sid_1,!1 = @sid]
EAD_1 = EAD_4[m1 = (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))),suitesR_2 = suitesR,EAD_2 = EAD_2_1,C_R = C_R_1,!3 = @sid_2,!2 = @sid_3,!1 = @sid]

1. Event eHonest(psk_4[]) may be executed at {2}.
event(eHonest(psk_4[])).

2. We assume as hypothesis that
attacker(EAD_1_1).

3. We assume as hypothesis that
attacker(C_I_1).

4. By 3, the attacker may know C_I_1.
By 2, the attacker may know EAD_1_1.
Using the function 2-tuple the attacker may obtain (C_I_1,EAD_1_1).
attacker((C_I_1,EAD_1_1)).

5. We assume as hypothesis that
attacker(suitesI_1).

6. By 5, the attacker may know suitesI_1.
By 4, the attacker may know (C_I_1,EAD_1_1).
Using the function 2-tuple the attacker may obtain (suitesI_1,(C_I_1,EAD_1_1)).
attacker((suitesI_1,(C_I_1,EAD_1_1))).

7. We assume as hypothesis that
attacker(suitesR).

8. We assume as hypothesis that
attacker(EAD_2_1).

9. By 8, the attacker may know EAD_2_1.
By 7, the attacker may know suitesR.
Using the function 2-tuple the attacker may obtain (EAD_2_1,suitesR).
attacker((EAD_2_1,suitesR)).

10. We assume as hypothesis that
attacker(C_R_1).

11. By 10, the attacker may know C_R_1.
By 9, the attacker may know (EAD_2_1,suitesR).
Using the function 2-tuple the attacker may obtain (C_R_1,(EAD_2_1,suitesR)).
attacker((C_R_1,(EAD_2_1,suitesR))).

12. The message (suitesI_1,(C_I_1,EAD_1_1)) that the attacker may have by 6 may be received at input {16}.
The event eShare(X) may be executed at {21}.
So the message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) may be sent to the attacker at output {35}.
attacker((method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))))).

13. By 12, the attacker may know (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).
Using the function 2-proj-2-tuple the attacker may obtain (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
attacker((suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).

14. By 13, the attacker may know (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
Using the function 2-proj-2-tuple the attacker may obtain (exp(g,X),(C_I_1,EAD_1_1)).
attacker((exp(g,X),(C_I_1,EAD_1_1))).

15. By 14, the attacker may know (exp(g,X),(C_I_1,EAD_1_1)).
Using the function 1-proj-2-tuple the attacker may obtain exp(g,X).
attacker(exp(g,X)).

16. By 15, the attacker may know exp(g,X).
By 4, the attacker may know (C_I_1,EAD_1_1).
Using the function 2-tuple the attacker may obtain (exp(g,X),(C_I_1,EAD_1_1)).
attacker((exp(g,X),(C_I_1,EAD_1_1))).

17. By 5, the attacker may know suitesI_1.
By 16, the attacker may know (exp(g,X),(C_I_1,EAD_1_1)).
Using the function 2-tuple the attacker may obtain (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
attacker((suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).

18. Using the function method_four the attacker may obtain method_four.
attacker(method_four).

19. By 18, the attacker may know method_four.
By 17, the attacker may know (suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))).
Using the function 2-tuple the attacker may obtain (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))).
attacker((method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1))))).

20. The message (C_R_1,(EAD_2_1,suitesR)) that the attacker may have by 11 may be received at input {82}.
The message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) that the attacker may have by 19 may be received at input {83}.
The event eShare(Y) may be executed at {88}.
So the message (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))) may be sent to the attacker at output {115}.
attacker((exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)))).

21. By 20, the attacker may know (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).
Using the function 2-proj-2-tuple the attacker may obtain encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)).
attacker(encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).

22. The message (C_R_1,(EAD_2_1,suitesR)) that the attacker may have by 11 may be received at input {82}.
The message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) that the attacker may have by 19 may be received at input {83}.
The event eShare(Y) may be executed at {88}.
So the message (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,X),Y)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))) may be sent to the attacker at output {115}.
attacker((exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,X),Y)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)))).

23. By 22, the attacker may know (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,X),Y)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).
Using the function 1-proj-2-tuple the attacker may obtain exp(g,Y).
attacker(exp(g,Y)).

24. By 23, the attacker may know exp(g,Y).
By 21, the attacker may know encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)).
Using the function 2-tuple the attacker may obtain (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))).
attacker((exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length)))).

25. The message (suitesI_1,(C_I_1,EAD_1_1)) that the attacker may have by 6 may be received at input {16}.
The event eShare(X) may be executed at {21}.
The message (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))) that the attacker may have by 24 may be received at input {36}.
So the message encxor((make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),aeadenc(EAD,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),stwelve[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sthirteen[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),iv_length),(sEncrypt0[],(sempty[],(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),seleven[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),plaintext_length)) may be sent to the attacker at output {70}.
attacker(encxor((make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),aeadenc(EAD,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),stwelve[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sthirteen[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),iv_length),(sEncrypt0[],(sempty[],(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),seleven[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),plaintext_length))).

26. The message (C_R_1,(EAD_2_1,suitesR)) that the attacker may have by 11 may be received at input {82}.
The message (method_four,(suitesI_1,(exp(g,X),(C_I_1,EAD_1_1)))) that the attacker may have by 19 may be received at input {83}.
The event eShare(Y) may be executed at {88}.
The message encxor((make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),aeadenc(EAD,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),stwelve[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sthirteen[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),iv_length),(sEncrypt0[],(sempty[],(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),seleven[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),plaintext_length)) that the attacker may have by 25 may be received at input {116}.
So the message aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),seight[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),snine[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),iv_length),(sEncrypt0[],(sempty[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]))))))))) may be sent to the attacker at output {141}.
attacker(aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),seight[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),snine[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),iv_length),(sEncrypt0[],(sempty[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))))))).

27. The message (suitesI_1,(C_I_1,EAD_1_1)) that the attacker may have by 6 may be received at input {16}.
The event eShare(X) may be executed at {21}.
The message (exp(g,Y),encxor((C_R_1,EAD_2_1),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),stzero[],hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),plaintext_length))) that the attacker may have by 24 may be received at input {36}.
The message aeadenc(EAD_1,edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),seight[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),snine[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),iv_length),(sEncrypt0[],(sempty[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]))))))))) that the attacker may have by 26 may be received at input {72}.
So event eAcceptI(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),X,exp(g,Y)) may be executed at {77}.
event(eAcceptI(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),X,exp(g,Y))).

28. By 27, event(eAcceptI(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),X,exp(g,Y))).
By 1, event(eHonest(psk_4[])).
The goals are reached, combined in the following fact:
event(eAcceptI(cid_3,method_four,get_subject(make_cred(subject_i_1,psk_4[])),get_subject(make_cred(subject_r_1,psk_4[])),edhoc_kdf(hkdfextract(psk_4[],edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1)))))))),exp(exp(g,Y),X)),sfive[],hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1))),hash_length)),sseven[],hash((wrap(hash((wrap(hash((wrap(exp(g,Y)),wrap(hash((wrap(method_four),(wrap(suitesI_1),(wrap(exp(g,X)),(wrap(C_I_1),EAD_1_1))))))))),(C_R_1,EAD_2_1)))),(make_id(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[]),psk_4[]),(EAD,(make_cred(subject_i_1,psk_4[]),make_cred(subject_r_1,psk_4[])))))),hash_length),X,exp(g,Y))) && event(eHonest(psk_4[])).


Initial state

Additional knowledge of the attacker:
att
sEncrypt0
seight
seleven
sempty
sfive
snine
snull
sseven
sthirteen
stwelve
stzero
a
a_1
a_2
a_3
a_4
a_5
method_four
--------------------------------------------------------------
New processes:
    new psk_4: bitstring;
    event eHonest(psk_4);
    event eSharePSK(psk_4);
    !
    new cid_2: bitstring;
    new subject_i_4: bitstring;
    new subject_r_4: bitstring;
    event eExposeSubjectI(subject_i_4);
    event eExposeSubjectR(subject_r_4);
    !
    let cred_r_2: bitstring = make_cred(subject_r_4,psk_4) in
    let cred_i_2: bitstring = make_cred(subject_i_4,psk_4) in
    let ID_CRED_PSK_2: bitstring = make_id(cred_i_2,cred_r_2,psk_4) in
    (
        in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
        let method_2: bitstring = method_four in
        event eMethodOk(method_2);
        new X_2: bitstring;
        event eDebug(X_2,X_2);
        new EAD_3_2: bitstring;
        event eShare(X_2);
        event eLeakEAD(EAD_3_2);
        (
            let s_2: bitstring = X_2 in
            event eDebug(s_2,s_2);
            event eLeakShare(snull)
        ) | (
            let CRED_I_2: bitstring = get_cred_i(ID_CRED_PSK_2) in
            let CRED_R_2: bitstring = get_cred_r(ID_CRED_PSK_2) in
            let psk_2: bitstring = get_psk(ID_CRED_PSK_2) in
            let subject_i_2: bitstring = get_subject(CRED_I_2) in
            let cid: bitstring = cid_2 in
            event eStart_I(cid,method_2,subject_i_2);
            let G_X_2: bitstring = exp(g,X_2) in
            event eDebug(G_X_2,G_X_2);
            let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
            out(att, m1_2);
            in(att, m2_2: bitstring);
            let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
            let G_YX_2: bitstring = exp(G_Y_2,X_2) in
            let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
            let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
            let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
            event eDebug(PRK_2e_2,PRK_2e_2);
            let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
            event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
            let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
            let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
            let =method_2 = method_four in
            event eDerivedIShared(G_YX_2);
            let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
            let PRK_3e2m_2: bitstring = PRK_2e_2 in
            let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
            let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
            event eDebug(PRK_4e3m_2,PRK_4e3m_2);
            let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
            event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
            let plaintext_3b_2: bitstring = EAD_3_2 in
            let external_aad_3_2: bitstring = (ID_CRED_PSK_2,(TH_3_2,(CRED_I_2,CRED_R_2))) in
            let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
            let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
            let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
            let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
            let plaintext_3a_2: bitstring = (ID_CRED_PSK_2,ciphertext_3b_2) in
            event eDebug(plaintext_3a_2,plaintext_3a_2);
            let TH_4_2: bitstring = hash((wrap(TH_3_2),(ID_CRED_PSK_2,(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
            let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
            event eDebug(PRK_out_2,PRK_out_2);
            let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
            out(att, m3_2);
            event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
            (
                in(att, m4_2: bitstring);
                let external_aad_4_2: bitstring = TH_4_2 in
                let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
                let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
                let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
                let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
                let subject_r_2: bitstring = get_subject(CRED_R_2) in
                event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
                event eFinishI(cid,PRK_out_2)
            ) | (
                event eLeakSessionKey(snull)
            )
        )
    ) | (
        !
        (
            in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring)));
            in(att, m1: bitstring);
            let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
            event eMethodOk(method);
            new Y_2: bitstring;
            new EAD_4: bitstring;
            event eShare(Y_2);
            event eDebug(Y_2,Y_2);
            event eLeakEAD(EAD_4);
            (
                let s: bitstring = Y_2 in
                event eDebug(s,s);
                event eLeakShare(snull)
            ) | (
                let CRED_I: bitstring = get_cred_i(ID_CRED_PSK_2) in
                let CRED_R: bitstring = get_cred_r(ID_CRED_PSK_2) in
                let psk: bitstring = get_psk(ID_CRED_PSK_2) in
                let subject_r: bitstring = get_subject(CRED_R) in
                let cid_1: bitstring = cid_2 in
                event eStart_R(cid_1,method,subject_r);
                let G_Y: bitstring = exp(g,Y_2) in
                event eDebug(G_Y,G_Y);
                let G_XY_2: bitstring = exp(G_X,Y_2) in
                event eDebug(G_XY_2,G_XY_2);
                let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
                let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
                let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
                event eDebug(PRK_2e,PRK_2e);
                let =method = method_four in
                event eTHRShared(TH_2);
                event eDerivedRShared(G_XY_2);
                let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
                event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
                let plaintext_2: bitstring = (C_R,EAD_2) in
                let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
                out(att, m2);
                in(att, m3: bitstring);
                let PRK_3e2m: bitstring = PRK_2e in
                let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
                let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
                let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
                event eDebug(PRK_4e3m,PRK_4e3m);
                let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
                event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
                let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
                let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
                event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
                let =ID_CRED_PSK_in_2 = ID_CRED_PSK_2 in
                let external_aad_3: bitstring = (ID_CRED_PSK_2,(TH_3,(CRED_I,CRED_R))) in
                let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
                let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
                let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
                let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
                let TH_4: bitstring = hash((wrap(TH_3),(ID_CRED_PSK_2,(plaintext_3b,(CRED_I,CRED_R))))) in
                let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
                event eDebug(PRK_out,PRK_out);
                let external_aad_4: bitstring = TH_4 in
                let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
                let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
                let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
                let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
                out(att, m4);
                event eTransmitEAD(m4,EAD_4,PRK_out);
                let subject_i: bitstring = get_subject(CRED_I) in
                event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
                event eFinishR(cid_1,PRK_out);
                (
                    0
                ) | (
                    event eLeakSessionKey(snull)
                )
            )
        ) | (
            let psk_1: bitstring = psk_4 in
            event eDebug(psk_1,psk_1);
            event eCompromise(snull)
        )
    )

--------------------------------------------------------------
1st process: new psk_4: bitstring creating psk_3

1st process: event eHonest(psk_3) executed; it is a goal

1st process: event eSharePSK(psk_3) executed

1st process: Reduction ! 1 copy(ies)

1st process: new cid_2: bitstring creating cid_4

1st process: new subject_i_4: bitstring creating subject_i_3

1st process: new subject_r_4: bitstring creating subject_r_3

1st process: event eExposeSubjectI(subject_i_3) executed

1st process: event eExposeSubjectR(subject_r_3) executed

1st process: Reduction ! 2 copy(ies)

2nd process: let cred_r_2: bitstring = make_cred(subject_r_3,psk_3) succeeds

2nd process: let cred_i_2: bitstring = make_cred(subject_i_3,psk_3) succeeds

2nd process: let ID_CRED_PSK_2: bitstring = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) succeeds

2nd process: Reduction |

3rd process: Reduction ! 0 copy(ies)

2nd process: Beginning of process I

1st process: let cred_r_2: bitstring = make_cred(subject_r_3,psk_3) succeeds

1st process: let cred_i_2: bitstring = make_cred(subject_i_3,psk_3) succeeds

1st process: let ID_CRED_PSK_2: bitstring = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) succeeds

1st process: Reduction |

2nd process: Reduction ! 1 copy(ies)

2nd process: Reduction |

3rd process: Beginning of process compromise

3rd process: let psk_1: bitstring = psk_3 succeeds

3rd process: event eDebug(psk_3,psk_3) executed

3rd process: event eCompromise(snull): destructor fails

2nd process: Beginning of process R

1st process: Beginning of process I

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring)));
    in(att, m1: bitstring);
    let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
    event eMethodOk(method);
    new Y_2: bitstring;
    new EAD_4: bitstring;
    event eShare(Y_2);
    event eDebug(Y_2,Y_2);
    event eLeakEAD(EAD_4);
    (
        let s: bitstring = Y_2 in
        event eDebug(s,s);
        event eLeakShare(snull)
    ) | (
        let CRED_I: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_r: bitstring = get_subject(CRED_R) in
        let cid_1: bitstring = cid_4 in
        event eStart_R(cid_1,method,subject_r);
        let G_Y: bitstring = exp(g,Y_2) in
        event eDebug(G_Y,G_Y);
        let G_XY_2: bitstring = exp(G_X,Y_2) in
        event eDebug(G_XY_2,G_XY_2);
        let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
        let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
        let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
        event eDebug(PRK_2e,PRK_2e);
        let =method = method_four in
        event eTHRShared(TH_2);
        event eDerivedRShared(G_XY_2);
        let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
        let plaintext_2: bitstring = (C_R,EAD_2) in
        let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
        out(att, m2);
        in(att, m3: bitstring);
        let PRK_3e2m: bitstring = PRK_2e in
        let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
        let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
        let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
        event eDebug(PRK_4e3m,PRK_4e3m);
        let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
        event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
        let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
        let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
        event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
        let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
        let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(CRED_I,CRED_R))) in
        let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
        let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
        let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
        let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
        let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(CRED_I,CRED_R))))) in
        let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
        event eDebug(PRK_out,PRK_out);
        let external_aad_4: bitstring = TH_4 in
        let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
        let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
        let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
        let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
        out(att, m4);
        event eTransmitEAD(m4,EAD_4,PRK_out);
        let subject_i: bitstring = get_subject(CRED_I) in
        event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
        event eFinishR(cid_1,PRK_out);
        (
            0
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
)

--------------------------------------------------------------
2nd process: in(att, (C_R: bitstring,(EAD_2: bitstring,suitesR_2: bitstring))) done with message (a_5,(a_4,a_3))

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m1: bitstring);
    let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
    event eMethodOk(method);
    new Y_2: bitstring;
    new EAD_4: bitstring;
    event eShare(Y_2);
    event eDebug(Y_2,Y_2);
    event eLeakEAD(EAD_4);
    (
        let s: bitstring = Y_2 in
        event eDebug(s,s);
        event eLeakShare(snull)
    ) | (
        let CRED_I: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_r: bitstring = get_subject(CRED_R) in
        let cid_1: bitstring = cid_4 in
        event eStart_R(cid_1,method,subject_r);
        let G_Y: bitstring = exp(g,Y_2) in
        event eDebug(G_Y,G_Y);
        let G_XY_2: bitstring = exp(G_X,Y_2) in
        event eDebug(G_XY_2,G_XY_2);
        let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
        let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
        let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
        event eDebug(PRK_2e,PRK_2e);
        let =method = method_four in
        event eTHRShared(TH_2);
        event eDerivedRShared(G_XY_2);
        let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
        let plaintext_2: bitstring = (a_5,a_4) in
        let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
        out(att, m2);
        in(att, m3: bitstring);
        let PRK_3e2m: bitstring = PRK_2e in
        let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
        let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
        let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
        event eDebug(PRK_4e3m,PRK_4e3m);
        let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
        event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
        let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
        let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
        event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
        let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
        let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(CRED_I,CRED_R))) in
        let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
        let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
        let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
        let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
        let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(CRED_I,CRED_R))))) in
        let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
        event eDebug(PRK_out,PRK_out);
        let external_aad_4: bitstring = TH_4 in
        let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
        let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
        let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
        let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
        out(att, m4);
        event eTransmitEAD(m4,EAD_4,PRK_out);
        let subject_i: bitstring = get_subject(CRED_I) in
        event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
        event eFinishR(cid_1,PRK_out);
        (
            0
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
)

--------------------------------------------------------------
3rd process: in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring))) done with message (a_2,(a_1,a))

3rd process: let method_2: bitstring = method_four succeeds

3rd process: event eMethodOk(method_four) executed

3rd process: new X_2: bitstring creating X_1

3rd process: event eDebug(X_1,X_1) executed

3rd process: new EAD_3_2: bitstring creating EAD_2

3rd process: event eShare(X_1) executed

3rd process: event eLeakEAD(EAD_2) executed

3rd process: Reduction |

4th process: let CRED_I_2: bitstring = make_cred(subject_i_3,psk_3) succeeds

4th process: let CRED_R_2: bitstring = make_cred(subject_r_3,psk_3) succeeds

4th process: let psk_2: bitstring = psk_3 succeeds

4th process: let subject_i_2: bitstring = get_subject(make_cred(subject_i_3,psk_3)) succeeds

4th process: let cid: bitstring = cid_4 succeeds

4th process: event eStart_I(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3))) executed

4th process: let G_X_2: bitstring = exp(g,X_1) succeeds

4th process: event eDebug(exp(g,X_1),exp(g,X_1)) executed

4th process: let m1_2: bitstring = (method_four,(a_2,(exp(g,X_1),(a_1,a)))) succeeds

4th process: out(att, (~M,(~M_1,(~M_2,(~M_3,~M_4))))) with ~M = method_four, ~M_1 = a_2, ~M_2 = exp(g,X_1), ~M_3 = a_1, ~M_4 = a done

Additional knowledge of the attacker:
~M_2 = exp(g,X_1)
--------------------------------------------------------------
3rd process: Beginning of process CompromiseShare

3rd process: let s_2: bitstring = X_1 succeeds

3rd process: event eDebug(X_1,X_1) executed

3rd process: event eLeakShare(snull): destructor fails

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m1: bitstring);
    let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = m1 in
    event eMethodOk(method);
    new Y_2: bitstring;
    new EAD_4: bitstring;
    event eShare(Y_2);
    event eDebug(Y_2,Y_2);
    event eLeakEAD(EAD_4);
    (
        let s: bitstring = Y_2 in
        event eDebug(s,s);
        event eLeakShare(snull)
    ) | (
        let CRED_I: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_r: bitstring = get_subject(CRED_R) in
        let cid_1: bitstring = cid_4 in
        event eStart_R(cid_1,method,subject_r);
        let G_Y: bitstring = exp(g,Y_2) in
        event eDebug(G_Y,G_Y);
        let G_XY_2: bitstring = exp(G_X,Y_2) in
        event eDebug(G_XY_2,G_XY_2);
        let TH_1: bitstring = hash((wrap(method),(wrap(suitesI),(wrap(G_X),(wrap(C_I),EAD_1))))) in
        let TH_2: bitstring = hash((wrap(G_Y),wrap(TH_1))) in
        let PRK_2e: bitstring = hkdfextract(TH_2,G_XY_2) in
        event eDebug(PRK_2e,PRK_2e);
        let =method = method_four in
        event eTHRShared(TH_2);
        event eDerivedRShared(G_XY_2);
        let KEYSTREAM_2A: bitstring = edhoc_kdf(PRK_2e,stzero,TH_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A,KEYSTREAM_2A);
        let plaintext_2: bitstring = (a_5,a_4) in
        let m2: bitstring = (G_Y,encxor(plaintext_2,KEYSTREAM_2A)) in
        out(att, m2);
        in(att, m3: bitstring);
        let PRK_3e2m: bitstring = PRK_2e in
        let TH_3: bitstring = hash((wrap(TH_2),plaintext_2)) in
        let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
        let PRK_4e3m: bitstring = hkdfextract(psk,SALT_4e3m) in
        event eDebug(PRK_4e3m,PRK_4e3m);
        let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
        event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
        let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
        let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
        event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
        let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
        let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(CRED_I,CRED_R))) in
        let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
        let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
        let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
        let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
        let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(CRED_I,CRED_R))))) in
        let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
        event eDebug(PRK_out,PRK_out);
        let external_aad_4: bitstring = TH_4 in
        let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
        let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
        let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
        let m4: bitstring = aeadenc(EAD_4,K_4,IV_4,ad_4) in
        out(att, m4);
        event eTransmitEAD(m4,EAD_4,PRK_out);
        let subject_i: bitstring = get_subject(CRED_I) in
        event eAcceptR(cid_1,method,subject_i,subject_r,PRK_out,G_X,Y_2);
        event eFinishR(cid_1,PRK_out);
        (
            0
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m2_2: bitstring);
    let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
    let G_YX_2: bitstring = exp(G_Y_2,X_1) in
    let TH_1_2: bitstring = hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))) in
    let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
    let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
    event eDebug(PRK_2e_2,PRK_2e_2);
    let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
    event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
    let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
    let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
    let =method_four = method_four in
    event eDerivedIShared(G_YX_2);
    let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
    let PRK_3e2m_2: bitstring = PRK_2e_2 in
    let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
    let PRK_4e3m_2: bitstring = hkdfextract(psk_3,SALT_4e3m_2) in
    event eDebug(PRK_4e3m_2,PRK_4e3m_2);
    let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
    event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
    let plaintext_3b_2: bitstring = EAD_2 in
    let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
    let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
    let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
    let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
    let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
    event eDebug(plaintext_3a_2,plaintext_3a_2);
    let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
    event eDebug(PRK_out_2,PRK_out_2);
    let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
    out(att, m3_2);
    event eTransmitEAD(m3_2,EAD_2,PRK_4e3m_2);
    (
        in(att, m4_2: bitstring);
        let external_aad_4_2: bitstring = TH_4_2 in
        let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
        let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
        let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
        let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
        let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
        event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,PRK_out_2,X_1,G_Y_2);
        event eFinishI(cid_4,PRK_out_2)
    ) | (
        event eLeakSessionKey(snull)
    )
)

--------------------------------------------------------------
2nd process: in(att, m1: bitstring) done with message (method_four,(a_2,(~M_2,(a_1,a)))) = (method_four,(a_2,(exp(g,X_1),(a_1,a))))

2nd process: let (method: bitstring,(suitesI: bitstring,(G_X: bitstring,(C_I: bitstring,EAD_1: bitstring)))) = (method_four,(a_2,(exp(g,X_1),(a_1,a)))) succeeds

2nd process: event eMethodOk(method_four) executed

2nd process: new Y_2: bitstring creating Y_1

2nd process: new EAD_4: bitstring creating EAD_3

2nd process: event eShare(Y_1) executed

2nd process: event eDebug(Y_1,Y_1) executed

2nd process: event eLeakEAD(EAD_3) executed

2nd process: Reduction |

3rd process: let CRED_I: bitstring = make_cred(subject_i_3,psk_3) succeeds

3rd process: let CRED_R: bitstring = make_cred(subject_r_3,psk_3) succeeds

3rd process: let psk: bitstring = psk_3 succeeds

3rd process: let subject_r: bitstring = get_subject(make_cred(subject_r_3,psk_3)) succeeds

3rd process: let cid_1: bitstring = cid_4 succeeds

3rd process: event eStart_R(cid_4,method_four,get_subject(make_cred(subject_r_3,psk_3))) executed

3rd process: let G_Y: bitstring = exp(g,Y_1) succeeds

3rd process: event eDebug(exp(g,Y_1),exp(g,Y_1)) executed

3rd process: let G_XY_2: bitstring = exp(exp(g,X_1),Y_1) succeeds

3rd process: event eDebug(exp(exp(g,X_1),Y_1),exp(exp(g,X_1),Y_1)) executed

3rd process: let TH_1: bitstring = hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))) succeeds

3rd process: let TH_2: bitstring = hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))) succeeds

3rd process: let PRK_2e: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)) succeeds

3rd process: event eDebug(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1))) executed

3rd process: let =method_four = method_four succeeds

3rd process: event eTHRShared(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))) executed

3rd process: event eDerivedRShared(exp(exp(g,X_1),Y_1)) executed

3rd process: let KEYSTREAM_2A: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length) succeeds

3rd process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length)) executed

3rd process: let plaintext_2: bitstring = (a_5,a_4) succeeds

3rd process: let m2: bitstring = (exp(g,Y_1),encxor((a_5,a_4),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length))) succeeds

3rd process: out(att, (~M_5,~M_6)) with ~M_5 = exp(g,Y_1), ~M_6 = encxor((a_5,a_4),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length)) done

Additional knowledge of the attacker:
~M_6 = encxor((a_5,a_4),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length))
~M_5 = exp(g,Y_1)
--------------------------------------------------------------
2nd process: Beginning of process CompromiseShare

2nd process: let s: bitstring = Y_1 succeeds

2nd process: event eDebug(Y_1,Y_1) executed

2nd process: event eLeakShare(snull): destructor fails

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m3: bitstring);
    let PRK_3e2m: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)) in
    let TH_3: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))) in
    let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
    let PRK_4e3m: bitstring = hkdfextract(psk_3,SALT_4e3m) in
    event eDebug(PRK_4e3m,PRK_4e3m);
    let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
    event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
    let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
    let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
    event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
    let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
    let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
    let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
    let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
    let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
    let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
    event eDebug(PRK_out,PRK_out);
    let external_aad_4: bitstring = TH_4 in
    let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
    let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
    let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
    let m4: bitstring = aeadenc(EAD_3,K_4,IV_4,ad_4) in
    out(att, m4);
    event eTransmitEAD(m4,EAD_3,PRK_out);
    let subject_i: bitstring = get_subject(make_cred(subject_i_3,psk_3)) in
    event eAcceptR(cid_4,method_four,subject_i,get_subject(make_cred(subject_r_3,psk_3)),PRK_out,exp(g,X_1),Y_1);
    event eFinishR(cid_4,PRK_out);
    (
        0
    ) | (
        event eLeakSessionKey(snull)
    )
) | (
    in(att, m2_2: bitstring);
    let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
    let G_YX_2: bitstring = exp(G_Y_2,X_1) in
    let TH_1_2: bitstring = hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))) in
    let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
    let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
    event eDebug(PRK_2e_2,PRK_2e_2);
    let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
    event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
    let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
    let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
    let =method_four = method_four in
    event eDerivedIShared(G_YX_2);
    let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
    let PRK_3e2m_2: bitstring = PRK_2e_2 in
    let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
    let PRK_4e3m_2: bitstring = hkdfextract(psk_3,SALT_4e3m_2) in
    event eDebug(PRK_4e3m_2,PRK_4e3m_2);
    let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
    event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
    let plaintext_3b_2: bitstring = EAD_2 in
    let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
    let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
    let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
    let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
    let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
    event eDebug(plaintext_3a_2,plaintext_3a_2);
    let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
    event eDebug(PRK_out_2,PRK_out_2);
    let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
    out(att, m3_2);
    event eTransmitEAD(m3_2,EAD_2,PRK_4e3m_2);
    (
        in(att, m4_2: bitstring);
        let external_aad_4_2: bitstring = TH_4_2 in
        let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
        let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
        let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
        let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
        let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
        event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,PRK_out_2,X_1,G_Y_2);
        event eFinishI(cid_4,PRK_out_2)
    ) | (
        event eLeakSessionKey(snull)
    )
)

--------------------------------------------------------------
3rd process: in(att, m2_2: bitstring) done with message (~M_5,~M_6) = (exp(g,Y_1),encxor((a_5,a_4),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length)))

3rd process: let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = (exp(g,Y_1),encxor((a_5,a_4),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length))) succeeds

3rd process: let G_YX_2: bitstring = exp(exp(g,Y_1),X_1) succeeds

3rd process: let TH_1_2: bitstring = hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))) succeeds

3rd process: let TH_2_2: bitstring = hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))) succeeds

3rd process: let PRK_2e_2: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)) succeeds

3rd process: event eDebug(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1))) executed

3rd process: let KEYSTREAM_2A_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length) succeeds

3rd process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),stzero,hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),plaintext_length)) executed

3rd process: let plaintext_2_2: bitstring = (a_5,a_4) succeeds

3rd process: let (C_R_2: bitstring,EAD_2_2: bitstring) = (a_5,a_4) succeeds

3rd process: let =method_four = method_four succeeds

3rd process: event eDerivedIShared(exp(exp(g,Y_1),X_1)) executed

3rd process: let TH_3_2: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))) succeeds

3rd process: let PRK_3e2m_2: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)) succeeds

3rd process: let SALT_4e3m_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length) succeeds

3rd process: let PRK_4e3m_2: bitstring = hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)) succeeds

3rd process: event eDebug(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length))) executed

3rd process: let KEYSTREAM_3A_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length) succeeds

3rd process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length)) executed

3rd process: let plaintext_3b_2: bitstring = EAD_2 succeeds

3rd process: let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) succeeds

3rd process: let ad_3_2: bitstring = (sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

3rd process: let IV_3_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length) succeeds

3rd process: let K_3_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length) succeeds

3rd process: let ciphertext_3b_2: bitstring = aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))) succeeds

3rd process: let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

3rd process: event eDebug((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))) executed

3rd process: let TH_4_2: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

3rd process: let PRK_out_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length) succeeds

3rd process: event eDebug(edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length)) executed

3rd process: let m3_2: bitstring = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length)) succeeds

3rd process: out(att, ~M_7) with ~M_7 = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length)) done

Additional knowledge of the attacker:
~M_7 = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length))
--------------------------------------------------------------
3rd process: event eTransmitEAD(encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length)),EAD_2,hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length))) executed

3rd process: Reduction |

4th process: Beginning of process leakSKey(edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length))

4th process: event eLeakSessionKey(snull) executed

4th process: Reduction 0

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m3: bitstring);
    let PRK_3e2m: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)) in
    let TH_3: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))) in
    let SALT_4e3m: bitstring = edhoc_kdf(PRK_3e2m,sfive,TH_3,hash_length) in
    let PRK_4e3m: bitstring = hkdfextract(psk_3,SALT_4e3m) in
    event eDebug(PRK_4e3m,PRK_4e3m);
    let KEYSTREAM_3_2: bitstring = edhoc_kdf(PRK_3e2m,seleven,TH_3,plaintext_length) in
    event eDebug(KEYSTREAM_3_2,KEYSTREAM_3_2);
    let plaintext_3a: bitstring = decxor(m3,KEYSTREAM_3_2) in
    let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = plaintext_3a in
    event eDebug(ID_CRED_PSK_in_2,ID_CRED_PSK_in_2);
    let =ID_CRED_PSK_in_2 = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) in
    let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) in
    let ad_3: bitstring = (sEncrypt0,(sempty,external_aad_3)) in
    let IV_3: bitstring = edhoc_kdf(PRK_3e2m,sthirteen,TH_3,iv_length) in
    let K_3: bitstring = edhoc_kdf(PRK_4e3m,stwelve,TH_3,key_length) in
    let plaintext_3b: bitstring = aeaddec(ciphertext_3b,K_3,IV_3,ad_3) in
    let TH_4: bitstring = hash((wrap(TH_3),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let PRK_out: bitstring = edhoc_kdf(PRK_4e3m,sseven,TH_4,hash_length) in
    event eDebug(PRK_out,PRK_out);
    let external_aad_4: bitstring = TH_4 in
    let ad_4: bitstring = (sEncrypt0,(sempty,external_aad_4)) in
    let IV_4: bitstring = edhoc_kdf(PRK_3e2m,snine,TH_4,iv_length) in
    let K_4: bitstring = edhoc_kdf(PRK_4e3m,seight,TH_4,key_length) in
    let m4: bitstring = aeadenc(EAD_3,K_4,IV_4,ad_4) in
    out(att, m4);
    event eTransmitEAD(m4,EAD_3,PRK_out);
    let subject_i: bitstring = get_subject(make_cred(subject_i_3,psk_3)) in
    event eAcceptR(cid_4,method_four,subject_i,get_subject(make_cred(subject_r_3,psk_3)),PRK_out,exp(g,X_1),Y_1);
    event eFinishR(cid_4,PRK_out);
    (
        0
    ) | (
        event eLeakSessionKey(snull)
    )
) | (
    in(att, m4_2: bitstring);
    let external_aad_4_2: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
    let IV_4_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length) in
    let K_4_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length) in
    let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
    let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
    event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),X_1,exp(g,Y_1));
    event eFinishI(cid_4,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length))
)

--------------------------------------------------------------
2nd process: in(att, m3: bitstring) done with message ~M_7 = encxor((make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length))

2nd process: let PRK_3e2m: bitstring = hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)) succeeds

2nd process: let TH_3: bitstring = hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))) succeeds

2nd process: let SALT_4e3m: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length) succeeds

2nd process: let PRK_4e3m: bitstring = hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)) succeeds

2nd process: event eDebug(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length))) executed

2nd process: let KEYSTREAM_3_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length) succeeds

2nd process: event eDebug(edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),seleven,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),plaintext_length)) executed

2nd process: let plaintext_3a: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

2nd process: let (ID_CRED_PSK_in_2: bitstring,ciphertext_3b: bitstring) = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),aeadenc(EAD_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length),(sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

2nd process: event eDebug(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) executed

2nd process: let =make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) = make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3) succeeds

2nd process: let external_aad_3: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))) succeeds

2nd process: let ad_3: bitstring = (sEncrypt0,(sempty,(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

2nd process: let IV_3: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sthirteen,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),iv_length) succeeds

2nd process: let K_3: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),stwelve,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),key_length) succeeds

2nd process: let plaintext_3b: bitstring = EAD_2 succeeds

2nd process: let TH_4: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

2nd process: let PRK_out: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length) succeeds

2nd process: event eDebug(edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length)) executed

2nd process: let external_aad_4: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

2nd process: let ad_4: bitstring = (sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

2nd process: let IV_4: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length) succeeds

2nd process: let K_4: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length) succeeds

2nd process: let m4: bitstring = aeadenc(EAD_3,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))) succeeds

2nd process: out(att, ~M_8) with ~M_8 = aeadenc(EAD_3,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))) done

Additional knowledge of the attacker:
~M_8 = aeadenc(EAD_3,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))))
--------------------------------------------------------------
2nd process: event eTransmitEAD(aeadenc(EAD_3,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3))))))))),EAD_3,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length)) executed

2nd process: let subject_i: bitstring = get_subject(make_cred(subject_i_3,psk_3)) succeeds

2nd process: event eAcceptR(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),get_subject(make_cred(subject_r_3,psk_3)),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,X_1),Y_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),exp(g,X_1),Y_1): destructor fails

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    in(att, m4_2: bitstring);
    let external_aad_4_2: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) in
    let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
    let IV_4_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length) in
    let K_4_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length) in
    let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
    let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) in
    event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),subject_r_2,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),X_1,exp(g,Y_1));
    event eFinishI(cid_4,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length))
)

--------------------------------------------------------------
2nd process: in(att, m4_2: bitstring) done with message ~M_8 = aeadenc(EAD_3,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length),edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length),(sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))))

2nd process: let external_aad_4_2: bitstring = hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))) succeeds

2nd process: let ad_4_2: bitstring = (sEncrypt0,(sempty,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))))) succeeds

2nd process: let IV_4_2: bitstring = edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),snine,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),iv_length) succeeds

2nd process: let K_4_2: bitstring = edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),seight,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),key_length) succeeds

2nd process: let plaintext_4_2: bitstring = EAD_3 succeeds

2nd process: let subject_r_2: bitstring = get_subject(make_cred(subject_r_3,psk_3)) succeeds

2nd process: event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),get_subject(make_cred(subject_r_3,psk_3)),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),X_1,exp(g,Y_1)) executed; it is a goal

New processes:
(
    in(att, (suitesI_2: bitstring,(C_I_2: bitstring,EAD_1_2: bitstring)));
    let method_2: bitstring = method_four in
    event eMethodOk(method_2);
    new X_2: bitstring;
    event eDebug(X_2,X_2);
    new EAD_3_2: bitstring;
    event eShare(X_2);
    event eLeakEAD(EAD_3_2);
    (
        let s_2: bitstring = X_2 in
        event eDebug(s_2,s_2);
        event eLeakShare(snull)
    ) | (
        let CRED_I_2: bitstring = get_cred_i(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let CRED_R_2: bitstring = get_cred_r(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let psk_2: bitstring = get_psk(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3)) in
        let subject_i_2: bitstring = get_subject(CRED_I_2) in
        let cid: bitstring = cid_4 in
        event eStart_I(cid,method_2,subject_i_2);
        let G_X_2: bitstring = exp(g,X_2) in
        event eDebug(G_X_2,G_X_2);
        let m1_2: bitstring = (method_2,(suitesI_2,(G_X_2,(C_I_2,EAD_1_2)))) in
        out(att, m1_2);
        in(att, m2_2: bitstring);
        let (G_Y_2: bitstring,CIPHERTEXT_2_2: bitstring) = m2_2 in
        let G_YX_2: bitstring = exp(G_Y_2,X_2) in
        let TH_1_2: bitstring = hash((wrap(method_2),(wrap(suitesI_2),(wrap(G_X_2),(wrap(C_I_2),EAD_1_2))))) in
        let TH_2_2: bitstring = hash((wrap(G_Y_2),wrap(TH_1_2))) in
        let PRK_2e_2: bitstring = hkdfextract(TH_2_2,G_YX_2) in
        event eDebug(PRK_2e_2,PRK_2e_2);
        let KEYSTREAM_2A_2: bitstring = edhoc_kdf(PRK_2e_2,stzero,TH_2_2,plaintext_length) in
        event eDebug(KEYSTREAM_2A_2,KEYSTREAM_2A_2);
        let plaintext_2_2: bitstring = decxor(CIPHERTEXT_2_2,KEYSTREAM_2A_2) in
        let (C_R_2: bitstring,EAD_2_2: bitstring) = plaintext_2_2 in
        let =method_2 = method_four in
        event eDerivedIShared(G_YX_2);
        let TH_3_2: bitstring = hash((wrap(TH_2_2),plaintext_2_2)) in
        let PRK_3e2m_2: bitstring = PRK_2e_2 in
        let SALT_4e3m_2: bitstring = edhoc_kdf(PRK_3e2m_2,sfive,TH_3_2,hash_length) in
        let PRK_4e3m_2: bitstring = hkdfextract(psk_2,SALT_4e3m_2) in
        event eDebug(PRK_4e3m_2,PRK_4e3m_2);
        let KEYSTREAM_3A_2: bitstring = edhoc_kdf(PRK_3e2m_2,seleven,TH_3_2,plaintext_length) in
        event eDebug(KEYSTREAM_3A_2,KEYSTREAM_3A_2);
        let plaintext_3b_2: bitstring = EAD_3_2 in
        let external_aad_3_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(TH_3_2,(CRED_I_2,CRED_R_2))) in
        let ad_3_2: bitstring = (sEncrypt0,(sempty,external_aad_3_2)) in
        let IV_3_2: bitstring = edhoc_kdf(PRK_3e2m_2,sthirteen,TH_3_2,iv_length) in
        let K_3_2: bitstring = edhoc_kdf(PRK_4e3m_2,stwelve,TH_3_2,key_length) in
        let ciphertext_3b_2: bitstring = aeadenc(plaintext_3b_2,K_3_2,IV_3_2,ad_3_2) in
        let plaintext_3a_2: bitstring = (make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),ciphertext_3b_2) in
        event eDebug(plaintext_3a_2,plaintext_3a_2);
        let TH_4_2: bitstring = hash((wrap(TH_3_2),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(plaintext_3b_2,(CRED_I_2,CRED_R_2))))) in
        let PRK_out_2: bitstring = edhoc_kdf(PRK_4e3m_2,sseven,TH_4_2,hash_length) in
        event eDebug(PRK_out_2,PRK_out_2);
        let m3_2: bitstring = encxor(plaintext_3a_2,KEYSTREAM_3A_2) in
        out(att, m3_2);
        event eTransmitEAD(m3_2,EAD_3_2,PRK_4e3m_2);
        (
            in(att, m4_2: bitstring);
            let external_aad_4_2: bitstring = TH_4_2 in
            let ad_4_2: bitstring = (sEncrypt0,(sempty,external_aad_4_2)) in
            let IV_4_2: bitstring = edhoc_kdf(PRK_3e2m_2,snine,TH_4_2,iv_length) in
            let K_4_2: bitstring = edhoc_kdf(PRK_4e3m_2,seight,TH_4_2,key_length) in
            let plaintext_4_2: bitstring = aeaddec(m4_2,K_4_2,IV_4_2,ad_4_2) in
            let subject_r_2: bitstring = get_subject(CRED_R_2) in
            event eAcceptI(cid,method_2,subject_i_2,subject_r_2,PRK_out_2,X_2,G_Y_2);
            event eFinishI(cid,PRK_out_2)
        ) | (
            event eLeakSessionKey(snull)
        )
    )
) | (
    event eFinishI(cid_4,edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length))
)

--------------------------------------------------------------
The event eAcceptI(cid_4,method_four,get_subject(make_cred(subject_i_3,psk_3)),get_subject(make_cred(subject_r_3,psk_3)),edhoc_kdf(hkdfextract(psk_3,edhoc_kdf(hkdfextract(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a)))))))),exp(exp(g,Y_1),X_1)),sfive,hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4))),hash_length)),sseven,hash((wrap(hash((wrap(hash((wrap(exp(g,Y_1)),wrap(hash((wrap(method_four),(wrap(a_2),(wrap(exp(g,X_1)),(wrap(a_1),a))))))))),(a_5,a_4)))),(make_id(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3),psk_3),(EAD_2,(make_cred(subject_i_3,psk_3),make_cred(subject_r_3,psk_3)))))),hash_length),X_1,exp(g,Y_1)) is executed at {77} in copy a_6, a_7.
The event eHonest(psk_3) is executed at {2}.
A trace has been found.

Warning: We could not verify that the following axiom, declared at File "edhoc_psk_proverif_debug_v2.pv", line 70, characters 20-79, is satisfied by the attack trace.
event(eShare(k)) && attacker(k) ==> event(eLeakShare(k))
RESULT event(eAcceptI(cid_3,m,subj_i,subj_r,prk,x,gy))@i && event(eHonest(psk_3))@k ==> (event(eAcceptR(cid2,m,subj_i,subj_r,prk2,gx2,y2))@j && i > j && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(x))@t is false.
-- Query not (event(eShare(k))@i && attacker(k)@j) encoded as not (event(eShare(k)) && attacker(k)) in process 1.
Translating the process into Horn clauses...
Completing...
Starting query not (event(eShare(k))@i && attacker(k)@j)
RESULT not (event(eShare(k))@i && attacker(k)@j) is true.
-- Query event(eSharePSK(k))@i && attacker(k)@j ==> event(eCompromise(k))@t encoded as event(eSharePSK(k)) && attacker(k) ==> event(eCompromise(k)) in process 1.
Translating the process into Horn clauses...
Completing...
Starting query event(eSharePSK(k))@i && attacker(k)@j ==> event(eCompromise(k))@t
RESULT event(eSharePSK(k))@i && attacker(k)@j ==> event(eCompromise(k))@t is true.

--------------------------------------------------------------
Verification summary:

Query(ies):
 - Query event(eAcceptR(cid_3,m,subj_i,subj_r,prk,gx,y))@i && event(eHonest(psk_3))@k ==> (event(eAcceptI(cid2,m,subj_i,subj_r,prk2,x2,gy2))@t && i > t && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(y))@t is false.
 - Query event(eAcceptI(cid_3,m,subj_i,subj_r,prk,x,gy))@i && event(eHonest(psk_3))@k ==> (event(eAcceptR(cid2,m,subj_i,subj_r,prk2,gx2,y2))@j && i > j && prk = prk2) || (event(eCompromise(psk_3))@t && i > t) || event(eLeakShare(x))@t is false.
 - Query not (event(eShare(k))@i && attacker(k)@j) is true.
 - Query event(eSharePSK(k))@i && attacker(k)@j ==> event(eCompromise(k))@t is true.
Associated axiom(s):
 - Axiom event(eShare(k)) && attacker(k) ==> event(eLeakShare(k)) in process 1.

--------------------------------------------------------------

