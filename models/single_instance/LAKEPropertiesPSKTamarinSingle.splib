// LakePropertiesPSK.splib for EDHOC-PSK method_four

// ******************************************************************
// ************** Executability  ************************************
// ******************************************************************

// PASSED
lemma executableI_simple:
  exists-trace
  "Ex cid method psk subj_i #i. Start_I(cid, method, psk, subj_i) @i"

// PASSED
lemma executableR_simple:
  exists-trace
  "Ex cid method psk subj_r #i. Start_R(cid, method, psk, subj_r) @i"

// PASSED
lemma executable_full_protocol:
  exists-trace
  "Ex cid1 cid2 prk1 prk2 #i #j.
    FinishI(cid1, prk1) @i &
    FinishR(cid2, prk2) @j &
    prk1 = prk2"

// ******************************************************************
// ************** Confidentiality  **********************************
// ******************************************************************

// PASSED
lemma secretR_psk:
  "All cid subj_i subj_r prk gx gy #i #j #k.
     AcceptR(cid, method_four, subj_i, subj_r, prk, gx, gy)@i & K(prk)@j & ExposeSubjectR(subj_r)@k
   ==> (Ex #t. LeakSessionKey(prk)@t) 
    | (Ex #t. LeakShare(gy)@t)
    | (Ex #t. LeakShare(gx)@t)"

// PASSED
lemma secretI_psk:
  "All cid subj_i subj_r prk gx gy #i #j #k.
     AcceptI(cid, method_four, subj_i, subj_r, prk, gx, gy)@i & K(prk)@j & ExposeSubjectI(subj_i)@k
   ==> (Ex #t. LeakSessionKey(prk)@t)
    | (Ex #t. LeakShare(gx)@t)
    | (Ex #t. LeakShare(gy)@t)"


// ******************************************************************
// ************** Authentication  ***********************************
// ******************************************************************

// PASSED
lemma honestauthRI_psk_non_inj:
  "All cid subj_i subj_r prk gx gy #i #k.
     AcceptR(cid, method_four, subj_i, subj_r, prk, gx, gy)@i & ExposeSubjectI(subj_i)@k
   ==> (Ex cid2 prk2 gx2 gy2 #t. AcceptI(cid2, method_four, subj_i, subj_r, prk2, gx2, gy2)@t & t < i & prk = prk2)
    | (Ex #t. LeakShare(gy)@t)"

// PASSED
lemma honestauthIR_psk_non_inj:
  "All cid subj_i subj_r prk gx gy #i #k.
     AcceptI(cid, method_four, subj_i, subj_r, prk, gx, gy)@i & ExposeSubjectR(subj_r)@k
   ==> (Ex cid2 prk2 gx2 gy2 #j. AcceptR(cid2, method_four, subj_i, subj_r, prk2, gx2, gy2)@j & j < i & prk = prk2)
    | (Ex #t. LeakShare(gx)@t)"

// injectivity 
// PASSED
lemma authRI_psk_unique:
  "All cid1 cid2 m psk prk gx1 gy1 gx2 gy2 #i #j.
     AcceptR(cid1, m, psk, prk, gx1, gy1)@i & AcceptR(cid2, m, psk, prk, gx2, gy2)@j
   ==> #i = #j"

// PASSED
lemma authIR_psk_unique:
  "All cid1 cid2 m psk prk gx1 gy1 gx2 gy2 #i #j.
     AcceptI(cid1, m, psk, prk, gx1, gy1)@i & AcceptI(cid2, m, psk, prk, gx2, gy2)@j
   ==> #i = #j"

// ******************************************************************
// ************** Key Agreement  ************************************
// ******************************************************************

// PASSED
lemma key_agreement_psk:
  "All cid1 cid2 m psk prk1 prk2 gx gy #i #j.
     AcceptI(cid1, m, psk, prk1, gx, gy)@i &
     AcceptR(cid2, m, psk, prk2, gx, gy)@j
   ==> prk1 = prk2"

// PASSED
lemma pfs_psk:
  "All cid subj_i subj_r prk gx gy #i #j #k.
     AcceptI(cid, method_four, subj_i, subj_r, prk, gx, gy)@i & K(prk)@j & ExposeSubjectI(subj_i)@k
   ==> (Ex #t. LeakShare(gx)@t & t < i)
    | (Ex #t. LeakShare(gy)@t & t < i)
    | (Ex #t. LeakSessionKey(prk)@t)"

// ******************************************************************
// ************** Additional Security Properties  *******************
// ******************************************************************

lemma psk_secrecy:
  "All psk #i #j.
    !Honest(psk)@i & K(psk)@j ==> F"

// Strong secrecy of session key if no DH leak
lemma session_key_secrecy:
  "All cid prk #i.
    FinishI(cid, prk)@i ==> not (Ex #j. K(prk)@j & not (Ex #k. LeakSessionKey(prk)@k))"

lemma subject_psk_consistency:
  "All cid1 cid2 subj_i subj_r prk1 prk2 gx1 gy1 gx2 gy2 #i #j.
     AcceptI(cid1, method_four, subj_i, subj_r, prk1, gx1, gy1)@i &
     AcceptR(cid2, method_four, subj_i, subj_r, prk2, gx2, gy2)@j
   ==> prk1 = prk2"

// ******************************************************************
// ************** Helper Lemmas  ************************************
// ******************************************************************

lemma honest_agents_agree:
  "All cid1 cid2 psk prk1 prk2 gx gy #i #j #k.
     AcceptI(cid1, method_four, psk, prk1, gx, gy)@i &
     AcceptR(cid2, method_four, psk, prk2, gx, gy)@j &
     !Honest(psk)@k
   ==> prk1 = prk2"
  
// ******************************************************************
// ************** Identity binding***********************************
// ******************************************************************

// PASSED
lemma identity_binding:
  "All cid subj_i subj_r prk x gy #i.
     AcceptI(cid, method_four, subj_i, subj_r, prk, x, gy)@i
   ==> (Ex #j. ExposeSubjectI(subj_i)@j) & (Ex #k. ExposeSubjectR(subj_r)@k)"

// Subject authenticity - responder knows initiator's real identity
lemma subject_authenticity_R:
  "All cid subj_i subj_r prk gx y #i #j #k.
     AcceptR(cid, method_four, subj_i, subj_r, prk, gx, y)@i & 
     ExposeSubjectI(subj_i)@j & ExposeSubjectR(subj_r)@k
   ==> (Ex cid2 prk2 x2 gy2 #t. AcceptI(cid2, method_four, subj_i, subj_r, prk2, x2, gy2)@t)
    | (Ex #t. LeakShare(gy)@t)"

// Subject authenticity - initiator knows responder's real identity  
lemma subject_authenticity_I:
  "All cid subj_i subj_r prk x gy #i #j #k.
     AcceptI(cid, method_four, subj_i, subj_r, prk, x, gy)@i & 
     ExposeSubjectI(subj_i)@j & ExposeSubjectR(subj_r)@k
   ==> (Ex cid2 prk2 gx2 y2 #t. AcceptR(cid2, method_four, subj_i, subj_r, prk2, gx2, y2)@t)
    | (Ex #t. LeakShare(gx)@t)"