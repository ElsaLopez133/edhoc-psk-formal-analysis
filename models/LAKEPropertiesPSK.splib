// properties.splib for EDHOC-PSK method_four

// ******************************************************************
// ************** Executability  ************************************
// ******************************************************************

lemma executableI_psk_method:
  exists-trace
    "Ex cid psk prk gx gy #i. AcceptI(cid, method_four, psk, prk, gx, gy)@i"

lemma executableR_psk_method:
  exists-trace
    "Ex cid psk prk gy gx #i. AcceptR(cid, method_four, psk, prk, gy, gx)@i"


// ******************************************************************
// ************** Confidentiality  **********************************
// ******************************************************************

lemma secretR_psk:
  "All cid m psk k4 ko y gx #i #j #k.
     AcceptR(cid, m, psk, k4, ko, y, gx)@i & KU(ko)@j & Honest(psk)@k
   ==> (Ex #t. LeakSessionKey(ko)@t) 
    | (Ex #t. LeakShare(y)@t)
    | (Ex #t. LeakShare(gx)@t)"

lemma secretI_psk:
  "All m psk k3 k4 ko x gy cid #i #j #k.
     AcceptI(cid, m, psk, k3, k4, ko, x, gy)@i & KU(ko)@j & Honest(psk)@k
   ==> (Ex #t. LeakSessionKey(ko)@t)
    | (Ex #t. LeakShare(x)@t)
    | (Ex #t. LeakShare(gy)@t)"


// ******************************************************************
// ************** Authentication  ***********************************
// ******************************************************************

lemma honestauthRI_psk_non_inj:
  "All cid m psk k4 ko y gx #i #k.
     AcceptR(cid, m, psk, k4, ko, y, gx)@i & Honest(psk)@k
   ==> (Ex #t. AcceptI(cid, m, psk, _, k4, ko, _, _)@t & t < i)
    | (Ex #t. LeakShare(y)@t)"

lemma honestauthIR_psk_non_inj:
  "All m psk k3 k4 ko x gy cid #i #k.
     AcceptI(cid, m, psk, k3, k4, ko, x, gy)@i & Honest(psk)@k
   ==> (Ex #j. AcceptR(cid, m, psk, k4, ko, _, _)@j & j < i)
    | (Ex #t. LeakShare(x)@t)"

lemma authRI_psk_unique:
  "All cid m psk k4 ko y1 gx1 y2 gx2 #i #j.
     AcceptR(cid, m, psk, k4, ko, y1, gx1)@i & AcceptR(cid, m, psk, k4, ko, y2, gx2)@j
   ==> #i = #j"

lemma authIR_psk_unique:
  "All m psk k3 k4 ko x gy x2 gy2 cid #i #j.
     AcceptI(cid, m, psk, k3, k4, ko, x, gy)@i & AcceptI(cid, m, psk, k3, k4, ko, x2, gy2)@j
   ==> #i = #j"

// ******************************************************************
// ************** Transcript authentication  ************************
// ******************************************************************

lemma data_authentication_I_to_R_psk:
  "All psk TH_2 TH_3 TH_4 suites EAD_1 EAD_2 EAD_3 m1 p2 p3 #i #j x gy ko.
     AcceptIData(ko, method_four, psk, x, gy, <TH_2,TH_3,TH_4,suites,EAD_1,EAD_2,EAD_3,m1,p2,p3>)@i
   & Honest(psk)@j
   ==> (Ex #l. l < i & SendRData(method_four, psk, <TH_2,suites,EAD_1,EAD_2,m1,p2>)@l)
    | (Ex #l. LeakShare(x)@l)"

lemma data_authentication_R_to_I_psk:
  "All psk TH_2 TH_3 TH_4 suites EAD_1 EAD_2 EAD_3 m1 p2 p3 y gx ko #i #j.
     AcceptRData(ko, method_four, psk, y, gx, <TH_2,TH_3,TH_4,suites,EAD_1,EAD_2,EAD_3,m1,p2,p3>)@i
   & Honest(psk)@j
   ==> (Ex #l. l < i & AcceptIData(ko, method_four, psk, _, _, <TH_2,TH_3,TH_4,suites,EAD_1,EAD_2,EAD_3,m1,p2,p3>)@l)
    | (Ex #l. LeakShare(y)@l)"
